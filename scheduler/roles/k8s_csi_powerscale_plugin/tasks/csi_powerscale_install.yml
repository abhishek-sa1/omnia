# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Deploy external-snapshotter config CRDs
  ansible.builtin.command:
    cmd: "kubectl apply -f client/config/crd/"
    chdir: "{{ csi_powerscale_path }}/csi-powerscale/external-snapshotter/"
  register: install_result
  failed_when: false
  changed_when: install_result.changed

- name: Deploy external-snapshotter snapshot-controller CRDs
  ansible.builtin.command:
    cmd: "kubectl apply -f deploy/kubernetes/snapshot-controller/"
    chdir: "{{ csi_powerscale_path }}/csi-powerscale/external-snapshotter/"
  register: install_result
  failed_when: false
  changed_when: install_result.changed

- name: Execute CSI driver installation script with timeout of seconds {{ async_time }}
  ansible.builtin.command:
    cmd: "./csi-install.sh --namespace {{ isilon_ns }} --values {{ csi_powerscale_values_path }}"
    chdir: "{{ csi_powerscale_path }}/{{ csi_powerscale_git | regex_replace('\\.tar\\.gz$', '') }}/dell-csi-helm-installer"
  register: install_result
  async: "{{ async_time }}"
  poll: "{{ poll_time }}"
  failed_when: false
  changed_when: install_result.changed

- name: Wait for csi pods to be in Running state
  ansible.builtin.shell: >
        set -o pipefail && \
        kubectl get pod -n {{ isilon_ns }} --no-headers | grep {{ powerscale_pod_indcator }} | grep -v "Running"
  register: isilon_non_running_pods
  failed_when: false
  changed_when: false
  until: isilon_non_running_pods.stdout_lines | length == 0
  retries: "{{ max_attempts }}"
  delay: "{{ wait_time }}"

- name: Verify csi driver installation
  ansible.builtin.pause:
    seconds: "{{ warning_wait_time }}"
    prompt: "{{ fail_msg_csi_powerscale_driver }}"
  when: isilon_non_running_pods.stdout_lines | length > 0

- name: Create powerscale storage class if deployment was successful
  ansible.builtin.command:
    cmd: "kubectl apply -f ps_storage_class.yml"
    chdir: "{{ csi_powerscale_path }}"
  register: sc_command_result
  failed_when: false
  changed_when: sc_command_result.changed
  when: isilon_non_running_pods.stdout_lines | length == 0

- name: Remove ps_storage_class.yml file
  ansible.builtin.file:
    path: "{{ csi_powerscale_path }}/ps_storage_class.yml"
    state: absent
    force: true
