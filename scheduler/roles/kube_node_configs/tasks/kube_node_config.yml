# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Create Kubernetes config directories
  ansible.builtin.file:
    path: "{{ kube_config_root }}/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ kube_config_dir }}"
    - "{{ kube_ssl_dir }}"

- name: Copy Kubernetes CA certificate
  ansible.builtin.copy:
    src: "{{ kube_ca_cert_src }}"
    dest: "{{ kube_config_root }}/{{ kube_ssl_dir }}/ca.crt"
    owner: root
    group: root
    mode: '0644'
    remote_src: true

# CNI configs
- name: Create CNI config directory
  ansible.builtin.file:
    path: "{{ kube_config_root }}/{{ cni_dir }}"
    state: directory
    mode: '0755'

- name: Copy CNI binaries
  ansible.builtin.copy:
    src: "{{ cni_bin_src }}"
    dest: "{{ kube_config_root }}/{{ cni_dir }}/"
    owner: root
    group: root
    mode: '0755'
    remote_src: true

# Containerd configs
- name: Copy containerd configuration
  ansible.builtin.copy:
    src: "{{ containerd_conf_src }}"
    dest: "{{ kube_config_root }}/"
    owner: root
    group: root
    mode: '0755'
    remote_src: true

- name: Ensure overlayfs plugin config is present at the end of containerd config.toml
  ansible.builtin.blockinfile:
    path: "{{ kube_config_root }}/containerd/config.toml"
    block: "{{ toml_overlay_block | indent(2, true) }}"
    marker: ""
    insertafter: EOF
  vars:
    toml_overlay_block: |
      [plugins."io.containerd.snapshotter.v1.overlayfs"]
        root_path = "/var/lib/containerd-overlay"

# Binaries
- name: Create local bin directory
  ansible.builtin.file:
    path: "{{ kube_config_root }}/{{ local_bin_dir }}"
    state: directory
    mode: '0755'

- name: Copy required binaries
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ kube_config_root }}/{{ local_bin_dir }}/"
    owner: root
    group: root
    mode: '0755'
    remote_src: true
  loop: "{{ kube_binaries }}"

# Service files
- name: Copy containerd service file
  ansible.builtin.copy:
    src: "{{ containerd_service_src }}"
    dest: "{{ kube_config_root }}/containerd.service"
    owner: root
    group: root
    mode: '0644'
    remote_src: true

- name: Copy kubelet service file
  ansible.builtin.copy:
    src: "{{ kubelet_service_src }}"
    dest: "{{ kube_config_root }}/kubelet.service"
    owner: root
    group: root
    mode: '0644'
    remote_src: true

# Pulp webserver cert
- name: Copy pulp webserver certificate
  ansible.builtin.copy:
    src: "{{ pulp_webserver_cert_src }}"
    dest: "{{ kube_config_root }}/pulp_webserver.crt"
    owner: root
    group: root
    mode: '0644'
    remote_src: true

- name: Ensure client share directory exists
  ansible.builtin.file:
    path: "{{ nfs_client_share_path }}"
    state: directory
    mode: '0755'

- name: Mount NFS share (force NFSv3)
  ansible.posix.mount:
    src: "{{ nfs_server_ip }}:{{ nfs_server_share_path }}"
    path: "{{ nfs_client_share_path }}"
    fstype: nfs
    opts: "{{ nfs_client_mount_options }},vers=3"
    state: mounted

- name: Clear contents of NFS client share path
  ansible.builtin.command: "rm -rf {{ nfs_client_share_path }}/*"
  changed_when: false

- name: Copy kube_node_configs folder to NFS share
  ansible.builtin.copy:
    src: "{{ kube_config_root }}/"
    dest: "{{ nfs_client_share_path }}/kube_node_configs/"
    owner: root
    group: root
    mode: "0755"
    directory_mode: "0755"
    remote_src: true
