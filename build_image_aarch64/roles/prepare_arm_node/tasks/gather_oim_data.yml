# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Inventory Validation
- name: Fail if no inventory provided
  ansible.builtin.fail:
    msg: "{{ no_inventory_error_msg }}"
  when: groups['all'] | length == 0

- name: Fail if inventory group 'admin_aarch64' is empty
  ansible.builtin.fail:
    msg: "{{ admin_aarch64_empty_error_msg }}"
  when: groups['admin_aarch64'] is not defined or groups['admin_aarch64'] | length == 0

- name: Fail if inventory group 'admin_aarch64' has more than one host
  ansible.builtin.fail:
    msg: "{{ admin_aarch64_count_error_msg }}"
  when: groups['admin_aarch64'] | length != 1

# Validate share option
- name: Set share option fact
  ansible.builtin.set_fact:
    omnia_share_option: "{{ hostvars['localhost']['omnia_share_option'] }}"

- name: Fail if share option is not NFS
  ansible.builtin.fail:
    msg: "{{ nfs_not_configured_msg }}"
  when: omnia_share_option != "NFS"

# Load network specification
- name: Load network spec file
  ansible.builtin.include_vars:
    file: "{{ network_spec }}"
  register: include_network_spec
  no_log: true

- name: Fail if network spec cannot be loaded
  ansible.builtin.fail:
    msg: "{{ network_spec_syntax_fail_msg }} Error: {{ include_network_spec.message }}"
  when: include_network_spec is failed

# Parse network spec data
- name: Parse network spec
  ansible.builtin.set_fact:
    network_data: "{{ network_data | default({}) | combine({item.key: item.value}) }}"
  with_dict: "{{ Networks }}"

# Set PXE IP fact
- name: Set PXE IP fact
  ansible.builtin.set_fact:
    oim_pxe_ip: "{{ network_data.admin_network.primary_oim_admin_ip }}"
    cacheable: true

# Create template directory if missing
- name: Create template directory
  ansible.builtin.file:
    path: "{{ template_path }}"
    state: directory
    mode: "0755"
  become: true
