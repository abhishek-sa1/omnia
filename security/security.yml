# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set variables for omnia run tags
  hosts: localhost
  connection: local
  tasks:
    - name: Set dynamic run tags for security flow
      ansible.builtin.set_fact:
        omnia_run_tags: "{{ (ansible_run_tags | default([]) + ['freeipa'] + ['openldap'] + ['security']) | unique }}"
        cacheable: true
      when: not (hostvars['127.0.0.1']['config_file_status'] | default(false) | bool)

- name: Invoke validate_config.yml to perform L1 and L2 validations
  ansible.builtin.import_playbook: ../input_validation/validate_config.yml
  when: not (hostvars['127.0.0.1']['config_file_status'] | default(false) | bool)

- name: Invoke get_config_credentials.yml
  ansible.builtin.import_playbook: ../utils/credential_utility/get_config_credentials.yml
  when: not ( hostvars['127.0.0.1']['config_file_status'] | default(false) | bool )

- name: Include input project directory
  ansible.builtin.import_playbook: ../utils/include_input_dir.yml
  when: not ( hostvars['127.0.0.1']['project_dir_status'] | default(false) | bool )

- name: Validate inventory
  ansible.builtin.import_playbook: ../utils/inventory_validation.yml
  when: not ( hostvars['127.0.0.1']['inventory_validation_executed'] | default(false) | bool )

- name: Update Inventory with ansible_host information
  ansible.builtin.import_playbook: ../utils/servicetag_host_mapping.yml
  when: not ( hostvars['127.0.0.1']['update_inventory_executed'] | default(false) | bool )

- name: Gather facts from all the nodes
  hosts: slurm_control_node, slurm_node, slurm_dbd, login_node, kube_control_plane, kube_node, etcd, auth_server
  gather_facts: true

- name: Validate security input parameters
  hosts: localhost
  connection: local
  any_errors_fatal: true
  tasks:
    - name: Validate security input parameters
      ansible.builtin.include_role:
        name: security_validation
        tasks_from: validation_status_check.yml
  tags: freeipa, ldap

- name: Update Repositories/Registries on nodes
  ansible.builtin.import_playbook: ../utils/update_user_repo.yml
  when: not ( hostvars['127.0.0.1']['update_user_repo_executed'] | default(false) | bool )

- name: Add hosts to nodes and login nodes
  hosts: slurm_control_node, slurm_node, kube_control_plane, kube_node, auth_server, login_node, etcd
  gather_facts: false
  any_errors_fatal: true
  roles:
    - hostname_validation
  tags: freeipa

- name: Validate hostname
  hosts: slurm_control_node, slurm_node, kube_control_plane, kube_node, auth_server, login_node, etcd
  any_errors_fatal: true
  gather_facts: false
  tasks:
    - name: Validate hostname
      ansible.builtin.include_role:
        name: hostname_validation
        tasks_from: validate_hostname.yml
  tags: freeipa, ldap

- name: Apply login common installation and config
  hosts: slurm_control_node, slurm_node, kube_control_plane, kube_node, auth_server, login_node, etcd
  any_errors_fatal: true
  gather_facts: false
  roles:
    - freeipa_common
  tags: freeipa

- name: Apply login server installation and config
  hosts: auth_server
  gather_facts: false
  roles:
    - freeipa_server
  tags: freeipa

- name: Install FreeIPA client on login_node and nodes
  hosts: slurm_control_node, slurm_node, kube_control_plane, kube_node, login_node, etcd:!auth_server
  gather_facts: false
  roles:
    - freeipa_client
  tags: freeipa

- name: Install openldap server and apply configurations
  hosts: auth_server
  tasks:
    - name: Setup openldap server and apply configurations
      when: hostvars['127.0.0.1']['authentication_system'] == 'openldap'
      block:
        - name: Include server prerequisite config
          ansible.builtin.include_role:
            name: ldap_server

        - name: Include LTB role for server installation
          ansible.builtin.include_role:
            name: "{{ hostvars['127.0.0.1']['ltb_repo_path'] }}"
          vars:
            ldaptoolbox_openldap_overlay_ppolicy_olcPPolicyHashCleartext: "TRUE"   # noqa var-naming[pattern]
            ldaptoolbox_openldap_overlay_ppolicy_olcPPolicyUseLockout: "TRUE"   # noqa var-naming[pattern]
          when: not openldap_status

        - name: Include domain setup task for server configuration
          ansible.builtin.include_role:
            name: ldap_server
            tasks_from: set_domain.yml
          when: not openldap_status

- name: Apply ldap client installation and config
  hosts: slurm_control_node, slurm_node, kube_control_plane, kube_node, auth_server, login_node, etcd
  gather_facts: false
  roles:
    - ldap_client
  tags: ldap

- name: Configure secure login
  hosts: login_node
  gather_facts: false
  roles:
    - secure_login_node
