#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Include local_repo_access.yml file
  ansible.builtin.include_vars: "{{ local_repo_access_path }}"

- name: Test reachablility of SMTP server
  ansible.builtin.command: ping -c3 {{ hostvars['localhost']['smtp_server'][0]['host'] }}
  changed_when: false
  failed_when: false
  register: smtp_server_reachability

- name: Verify SMTP server reachability
  ansible.builtin.fail:
    msg: "{{ smtp_server_reach_msg }}"
  when: ping_msg in smtp_server_reachability.stdout

- name: Install s-nail and postfix for RHEL/Rocky
  ansible.builtin.package:
    name: "{{ mail_packages_redhat }}"
    state: present
  when: ansible_distribution | lower in [redhat_os, rocky_os]

- name: Install mailx and postfix for Ubuntu
  ansible.builtin.package:
    name: "{{ mail_packages_ubuntu }}"
    state: present
  when: ansible_distribution | lower == ubuntu_os

- name: Start postfix service
  ansible.builtin.systemd:
    name: postfix
    state: started
    enabled: true

- name: Configure postfix for smtp server
  ansible.builtin.lineinfile:
    path: "{{ postfix_conf_path }}"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    state: present
  register: postfix_config
  with_items:
    - { regexp: "^relayhost*", line: "relayhost = {{ hostvars['localhost']['smtp_server'][0]['host'] }}:{{ hostvars['localhost']['smtp_server'][0]['port'] }}" }
    - { regexp: "^myorigin*", line: "myorigin = {{ hostvars['localhost']['smtp_server'][0]['sender_address'] }}" }

- name: Restart postfix service
  ansible.builtin.systemd:
    name: postfix
    state: restarted
    enabled: true
  when: postfix_config.results[0]['changed'] or postfix_config.results[1]['changed']

- name: Load software_config.json
  ansible.builtin.include_vars:
    file: "{{ software_config_json_file }}"
    name: software_config

# set os_version from software_config.json file
- name: Set facts for cluster
  ansible.builtin.set_fact:
    cluster_os_version: "{{ software_config.cluster_os_version }}"
    cluster_os_type: "{{ software_config.cluster_os_type }}"

- name: Load secure_login_node.json
  ansible.builtin.set_fact:
    secure_login_node_json: "{{ lookup('file', secure_login_node_packages_file) | from_json }}"

# Extract python version from json file
- name: Extract python version from software_config.json
  ansible.builtin.set_fact:
    python_version: "{{ secure_login_node_json['secure_login_node']['cluster'] | selectattr('type', 'in', ['deb', 'rpm']) | selectattr('package', 'search', 'python') | map(attribute='package') | first }}"  # noqa: yaml[line-length]
    secure_login_pip_packages: "{{ secure_login_node_json['secure_login_node']['cluster'] | selectattr('type', 'equalto', 'pip_module') | map(attribute='package') | list }}"   # noqa: yaml[line-length]

- name: Install packages for os
  ansible.builtin.include_tasks: configure_alerting_{{ ansible_distribution | lower }}.yml
