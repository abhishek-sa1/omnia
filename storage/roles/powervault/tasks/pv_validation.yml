# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Assert username and password for powervault
  block:
    - name: Assert powervault_username and powervault_password
      ansible.builtin.assert:
        that:
          - powervault_username | length >= min_username_length
          - powervault_username | length < max_length
          - '"-" not in powervault_username '
          - '"\\" not in powervault_username '
          - '"\"" not in powervault_username '
          - " \"'\" not in powervault_username "
          - powervault_password | length > min_length | int - 1
          - powervault_password | length < max_length | int + 1
          - '"-" not in powervault_password '
          - '"," not in powervault_password '
          - '"." not in powervault_password '
          - '"<" not in powervault_password '
          - '"\\" not in powervault_password '
          - '"\"" not in powervault_password '
          - " \"'\" not in powervault_password "
          - powervault_password | regex_search('^(?=.*[a-z]).+$')
          - powervault_password | regex_search('^(?=.*[A-Z]).+$')
          - powervault_password | regex_search('^(?=.*\\d).+$')
          - powervault_password | regex_search('^(?=.*[!#$%&()*+/:;=>?@^_`{} ~]).+$')
      no_log: true
  rescue:
    - name: Powervault credentials validation check
      ansible.builtin.fail:
        msg: "{{ pv_fail_msg_credentials }}"

- name: Get auth string
  ansible.builtin.shell: echo -n {{ powervault_username }}_{{ powervault_password }} | sha256sum
  register: val_auth_string
  changed_when: false
  no_log: true
  ignore_errors: true

- name: Get session key
  ansible.builtin.uri:
    url: https://{{ inventory_hostname }}/api/login/{{ val_auth_string.stdout | replace(" -", "") }}
    method: GET
    headers:
      {'datatype': 'json'}
    validate_certs: false
  register: val_session_key

- name: Validate the value of powervault_protocol
  ansible.builtin.assert:
    that:
      - powervault_protocol | length > 1
      - powervault_protocol | lower == "sas" or powervault_protocol | lower == "iscsi" or powervault_protocol | lower == "fc"
    fail_msg: "{{ protocol_wrong_value }}"
    success_msg: "{{ protocol_success }}"

- name: Validate the value of powervault_protocol is not fc
  ansible.builtin.fail:
    msg: "{{ protocol_supported }}"
  when: powervault_protocol | lower == "fc"

- name: Validate the value of powervault controller mode
  ansible.builtin.assert:
    that:
      - powervault_controller_mode | length > 1
      - powervault_controller_mode | lower == "single" or powervault_controller_mode | lower == "multi"
    fail_msg: "{{ controller_wrong_value }}"
    success_msg: "{{ controller_success }}"

- name: Check if system name has space
  ansible.builtin.shell: echo {{ powervault_system_name }} | grep '\s' -c
  register: space_count
  changed_when: false
  ignore_errors: true

- name: Fail if system name has space
  ansible.builtin.assert:
    that:
      - space_count.stdout | int == 0
      - powervault_system_name | length < 30
    msg: "{{ system_name_wrong }}"

- name: Check if powervault_volumes is not empty
  ansible.builtin.assert:
    that: powervault_volumes | length > 1
    fail_msg: "{{ powervault_volumes_fail_msg }}"

- name: Assert disk group name given if pool type is linear
  ansible.builtin.assert:
    that:
      - powervault_disk_group_name | length > 1
    msg: "{{ system_name_wrong }}"
  when: powervault_pool_type | lower == "linear"

- name: Check if disk group name has space
  ansible.builtin.shell: echo {{ powervault_disk_group_name }} | grep '\s' -c
  register: disk_count
  when: powervault_disk_group_name | length > 1
  ignore_errors: true
  changed_when: false

- name: Assert if disk group name has space
  ansible.builtin.assert:
    that:
      - disk_count.stdout == "0"
      - powervault_disk_group_name | length < 30
    msg: "{{ system_name_wrong }}"
  when: powervault_disk_group_name | length > 1

- name: Assert snmp notification level
  ansible.builtin.assert:
    that:
      - powervault_snmp_notify_level | length >1
      - powervault_snmp_notify_level == "crit"
        or powervault_snmp_notify_level == "error"
        or powervault_snmp_notify_level == "warn"
        or powervault_snmp_notify_level == "resolved"
        or powervault_snmp_notify_level == "info"
        or powervault_snmp_notify_level == "none"
    fail_msg: "{{ snmp_wrong_value }}"
    success_msg: "{{ snmp_success }}"

- name: Assert RAID value
  ansible.builtin.assert:
    that: >
      powervault_raid_levels | lower == "r1" or powervault_raid_levels | lower == "raid1" or
      powervault_raid_levels | lower == "r5" or powervault_raid_levels | lower == "raid5" or
      powervault_raid_levels | lower == "r6" or powervault_raid_levels | lower == "raid6" or
      powervault_raid_levels | lower == "r10" or powervault_raid_levels | lower == "raid10" or
      powervault_raid_levels | lower == "adapt"
    msg: "{{ raid_level_wrong }}"

- name: Assert disk range
  ansible.builtin.assert:
    that:
      - powervault_disk_range | length >1
    fail_msg: "{{ wrong_disk_range }}"
    success_msg: "{{ correct_disk_range }}"

- name: Check pool value
  ansible.builtin.assert:
    that:
      - powervault_pool == "a" or powervault_pool == "A" or powervault_pool == "b" or powervault_pool == "B"
    msg: "{{ wrong_pool }}"
  when: powervault_pool_type | lower == "virtual"

- name: Check pool type
  ansible.builtin.assert:
    that:
      - powervault_pool_type | length > 1
      - powervault_pool_type | lower == "virtual" or powervault_pool_type | lower == "linear"
    msg: "{{ wrong_pool_type }}"

- name: Check parition percentage
  ansible.builtin.assert:
    that:
      - powervault_disk_partition_size| length > 0
      - powervault_disk_partition_size|int
      - powervault_disk_partition_size|int < 90
      - powervault_disk_partition_size|int > 5
    msg: "{{ wrong_partition }}"
  when: powervault_protocol == "iscsi"

- name: Check the volume size
  ansible.builtin.assert:
    that: >
      'GB' in powervault_volume_size or
      'TB' in powervault_volume_size or
      'MB' in powervault_volume_size or
      'B' in powervault_volume_size
    msg: "{{ wrong_vol_size }}"

- name: Assert the nic provided
  ansible.builtin.assert:
    that:
      - powervault_server_nic | length > 2
  when: powervault_protocol == "iscsi"
