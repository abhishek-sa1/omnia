#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Select only the kubespray service names
  ansible.builtin.set_fact:
    kubespray_services: "{{ ansible_facts['services'].keys() | select('match', '^omnia_kubespray_') | list }}"

- name: Stop kubespray services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: stopped
  loop: "{{ kubespray_services }}"

- name: Get omnia_kubespray container files
  ansible.builtin.find:
    paths: "/etc/containers/systemd/"
    patterns: 'omnia_kubespray_*'
    file_type: file
  register: found_files

- name: Get the list of kubespray paths
  ansible.builtin.set_fact:
    kube_quad_path_list: "{{ found_files.files | map(attribute='path') | list }}"

- name: Remove kubespray systemd unit files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ kube_quad_path_list }}"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Get container info for each Kubespray container
  containers.podman.podman_container_info:
  register: podmen
  no_log: true

- name: Get the names of pods
  ansible.builtin.set_fact:
    kubespray_podnames: "{{ podmen.containers | map(attribute='Name') | list | select('match', '^omnia_kubespray_') | list }}"

- name: Stop Kubespray containers
  containers.podman.podman_container:
    name: "{{ item }}"
    state: stopped
  loop: "{{ kubespray_podnames }}"

- name: Remove Kubespray containers
  containers.podman.podman_container:
    name: "{{ item }}"
    state: absent
    force_delete: true
  loop: "{{ kubespray_podnames }}"

- name: Remove Kubespray cleanup directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
    force: true
  register: directory_deletion
  until: directory_deletion is not failed
  retries: "{{ max_retries }}"
  loop: "{{ kubespray_cleanup_directory }}"

- name: Check if target file exists
  ansible.builtin.stat:
    path: "{{ omnia_target }}"
  register: p

- name: Remove all kubespray services
  ansible.builtin.replace:
    path: "{{ omnia_target }}"
    regexp: '\s*omnia_kubespray_[^\s]+'
    replace: ''
  when: p.stat.exists
