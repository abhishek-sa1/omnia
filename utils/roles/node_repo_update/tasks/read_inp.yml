# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Read local repo config
  ansible.builtin.include_vars:
    file: "{{ local_repo_config_file }}"
    name: local_repo

- name: Collect repo names x86_64
  ansible.builtin.set_fact:
    x86_64: "{{ (x86_64 | default([])) + (local_repo[item] | default([]) | map(attribute='name') | list
     | map('regex_replace', '^(.*)$', 'x86_64_\\1-repo')) }}"
  loop: "{{ local_repo_keys_x86_64 }}"

- name: Collect repo names aarch64
  ansible.builtin.set_fact:
    aarch64: "{{ (aarch64 | default([])) + (local_repo[item] | default([]) | map(attribute='name') | list
     | map('regex_replace', '^(.*)$', 'aarch64_\\1-repo')) }}"
  loop: "{{ local_repo_keys_aarch64 }}"

- name: Read software_config json
  ansible.builtin.include_vars:
    file: "{{ software_config_json_file }}"
    name: software_config

# get_pulp_rpm_dist
- name: Validate repo configuration
  block:
    - name: Check pulp distribution command
      ansible.builtin.command: "{{ pulp_bin_path }} rpm distribution list"
      delegate_to: localhost
      register: check_pulp_repo
      changed_when: false

    - name: Set fact for distribution paths
      ansible.builtin.set_fact:
        pulp_dist_result: "{{ check_pulp_repo.stdout | from_json | rekey_on_member('name') }}"
        # pulp_dist_result: "{{ lookup('file', '/opt/omnia/pulp/jag_quadlet/pulp_dist_example.json') | from_json | rekey_on_member('name') }}"
      when: check_pulp_repo.stdout is defined and (check_pulp_repo.stdout | length > 0)
  rescue:
    - name: Failed - pulp repo is not configured
      ansible.builtin.fail:
        msg: "{{ repo_fail_msg }}"

# update_user_repo
- name: Initiate the repo
  ansible.builtin.set_fact:
    repo_list: []

- name: Initialise facts for cluster
  ansible.builtin.set_fact:
    beegfs_version: "{{ software_version_default }}"
    amdgpu_version: "{{ software_version_default }}"
    rocm_version: "{{ software_version_default }}"

- name: Set facts for cluster
  ansible.builtin.set_fact:
    cluster_os_type: "{{ software_config.cluster_os_type }}"
    cluster_os_version: "{{ software_config.cluster_os_version }}"

# update_software_repo
- name: Set fact for software version from software_config json
  ansible.builtin.set_fact:
    version_dict: "{{ version_dict | default({}) | combine({item.name: item.name + '_' + item.version}) }}"
    "{{ item.name }}_version": "{{ item.version }}"
  loop: "{{ software_config.softwares + software_config.amdgpu | default([]) }}"
  when: item.name in versioned_softwares
  loop_control:
    loop_var: item

- name: Process omnia_repo_urls in one line
  ansible.builtin.set_fact:
    omnia_repo_url_processed: "{{ omnia_repo_url_processed | default([]) | list
     + [item | combine({'name': version_dict[item.name]}) if item.name in version_dict.keys() else item] }}"
  loop: "{{ omnia_repo_url_rhel | default([]) }}"
  loop_control:
    loop_var: item
