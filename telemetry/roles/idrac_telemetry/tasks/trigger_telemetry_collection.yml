# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Restart iDRAC telemetry container
- name: Restart iDRAC telemetry container
  when:
    - hostvars['localhost']['idrac_telemetry_support']
    - not hostvars['localhost']['federated_idrac_telemetry_collection']
    - hostvars['localhost']['telemetry_idrac'] is defined
    - (hostvars['localhost']['telemetry_idrac'] | length > 0)
  block:
    - name: Restart telemetry-collector
      containers.podman.podman_container:
        name: "{{ idrac_telemetry_container }}"
        state: started
        restart: true
  rescue:
    - name: Telemetry container restart failed
      ansible.builtin.fail:
        msg: "{{ idrac_telemetry_restart_failure_msg.splitlines() | join(' ') }}"

- name: Trigger rolling restart of StatefulSet idrac_telemetry
  when:
    - hostvars['localhost']['idrac_telemetry_support']
    - hostvars['localhost']['federated_idrac_telemetry_collection']
    - hostvars['telemetry_group']['telemetry_idrac'] is defined
    - (hostvars['telemetry_group']['telemetry_idrac'] | length > 0)
  block:
    - name: Restart idrac telemetry StatefulSet
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: "{{ idrac_telemetry_k8s_name }}"
            namespace: "{{ telemetry_namespace }}"
          spec:
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/restartedAt: "{{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}"
      register: restart_statefulset
  rescue:
    - name: StatefulSet restart failed
      ansible.builtin.fail:
        msg: "{{ idrac_telemetry_statefulset_restart_failure_msg.splitlines() | join(' ') }}"
