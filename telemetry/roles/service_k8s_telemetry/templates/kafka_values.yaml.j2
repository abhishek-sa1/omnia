image:
  registry: docker.io
  repository: {{ kafka_image_repo }}
  tag: {{ kafka_image_tag }}

replicaCount: 1

service:
  type: LoadBalancer
  port: {{ kafka_container_port }}
externalAccess:
  enabled: false

headless:
  enabled: true
  ports:
    broker: {{ kafka_container_port }}

tls:
  type: pem
  existingSecret: "kafka-secrets"
  passwordsSecret: ""
  keyPasswordSecretKey: ""
  keystorePasswordSecretKey: ""
  truststorePasswordSecretKey: ""

persistence:
  enabled: true
  storageClass: {{ storage_class_name }}
  size: {{ kafka_storage }}

nodeSelector:
  node-role.kubernetes.io/control-plane: ""
tolerations:
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"

kraft:
  enabled: true
  clusterId: ""           # Automatically generate
  controllerQuorumVoters: ""  # Auto-configure for single replica

provisioning:
  enabled: true
  topics:
    - name: {{ telemetry_topic_name }}
      partitions: {{ telemetry_topic_partitions }}
  auth:
    tls:
      type: pem
      certificatesSecret: "{{ kafka_secrets.name }}"
      cert: tls.crt
      key: tls.key
      caCert: ca.crt
      passwordsSecret: ""
      keyPasswordSecretKey: ""
      keystorePasswordSecretKey: ""
      truststorePasswordSecretKey: ""

zookeeper:
  enabled: false

listeners:
  client:
    name: CLIENT
    containerPort: 9092
    protocol: SSL
    sslClientAuth: "none"
  controller:
    name: CONTROLLER
    containerPort: 9093
    protocol: SSL
  interbroker:
    name: INTERBROKER
    containerPort: 9094
    protocol: SSL

listenerSecurityProtocolMap: "CLIENT:SSL,INTERBROKER:SSL,CONTROLLER:SSL"
interBrokerListenerName: INTERBROKER
controllerListenerNames: CONTROLLER
