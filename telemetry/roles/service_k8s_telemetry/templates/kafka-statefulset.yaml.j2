#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ telemetry_namespace }}
spec:
  serviceName: {{ kafka.headless_service_name }}
  replicas: {{ cp_node_count | int }}
  selector:
    matchLabels:
      app: {{ kafka.app_name }}
  template:
    metadata:
      labels:
        app: {{ kafka.app_name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ kafka.app_name }}
                topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 5
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 5
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 5
      containers:
        - name: {{ kafka.container_name }}
          image: {{ kafka.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
            - containerPort: 9093
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    cat <<EOF > /tmp/client.properties
                    security.protocol=SSL
                    ssl.truststore.type=PEM
                    ssl.truststore.location=/bitnami/kafka/config/certs/kafka.truststore.pem
                    ssl.endpoint.identification.algorithm=
                    EOF
          command:
            - /bin/bash
            - -c
            - |
              export KAFKA_NODE_ID=$(echo $POD_NAME | grep -o '[0-9]*$')
              export KAFKA_ADVERTISED_LISTENERS="INTERNAL://${POD_NAME}.kafka-headless.telemetry.svc.cluster.local:9092"
              exec /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
          env:
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KAFKA_KRAFT_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: kafka-cluster-id
                  key: cluster-id
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: >-
                {% for i in range(cp_node_count | int) -%}
                {{ i }}@kafka-{{ i }}.kafka-headless.telemetry.svc.cluster.local:9093{% if not loop.last %},{% endif %}
                {% endfor %}
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,INTERNAL:SSL"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://:{{ kafka.container_port1 }},CONTROLLER://:{{ kafka.container_port2 }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://{{ kafka.headless_service_name }}.{{ telemetry_namespace }}.svc.cluster.local:{{ kafka.container_port1 }}"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "no"
            - name: KAFKA_TLS_ENABLE
              value: "yes"
            - name: KAFKA_TLS_TYPE
              value: "PEM"
            - name: KAFKA_TLS_CERTIFICATE_FILE
              value: "/bitnami/kafka/config/certs/kafka.keystore.pem"
            - name: KAFKA_TLS_KEY_FILE
              value: "/bitnami/kafka/config/certs/kafka.keystore.key"
            - name: KAFKA_TLS_TRUST_CERTS_FILE
              value: "/bitnami/kafka/config/certs/kafka.truststore.pem"
            - name: KAFKA_TLS_CLIENT_AUTH
              value: "none"
            - name: KAFKA_CFG_LOG_RETENTION_HOURS
              value: "{{ hostvars['localhost']['kafka_configurations']['log_retention_hours'] }}"
            - name: KAFKA_CFG_LOG_RETENTION_BYTES
              value: "{{ hostvars['localhost']['kafka_configurations']['log_retention_bytes'] }}"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "{{ hostvars['localhost']['kafka_configurations']['topic_partitions'] }}"
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
            - name: kafka-tls
              mountPath: /bitnami/kafka/config/certs
              readOnly: true
      volumes:
        - name: kafka-tls
          secret:
            secretName: {{ kafka_secrets.name }}
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "{{ hostvars['localhost']['kafka_configurations']['persistence_size'] }}"
        storageClassName: {{ storage_class_name }}
