#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: telemetry
data:
  server.properties: |
    ###############################
    # Apache Kafka â€“ KRaft mode
    ###############################
    process.roles=broker,controller
    node.id=__NODE_ID__
    controller.listener.names=CONTROLLER
    controller.quorum.voters=0@kafka-0.kafka-headless.telemetry.svc.cluster.local:9093,1@kafka-1.kafka-headless.telemetry.svc.cluster.local:9093,2@kafka-2.kafka-headless.telemetry.svc.cluster.local:9093

    log.dirs=/opt/kafka/data

    ###############################
    # Listeners
    ###############################
    listeners=INTERNAL://:9092,CONTROLLER://:9093
    advertised.listeners=INTERNAL://__POD_NAME__.kafka-headless.telemetry.svc.cluster.local:9092
    listener.security.protocol.map=CONTROLLER:SSL,INTERNAL:SSL
    inter.broker.listener.name=INTERNAL

    ###############################
    # TLS / SSL
    ###############################
    ssl.keystore.type=PEM
    ssl.keystore.location=/opt/kafka/tls/kafka.keystore.combined.pem
    ssl.key.location=
    ssl.truststore.type=PEM
    ssl.truststore.location=/opt/kafka/tls/kafka.truststore.pem
    ssl.client.auth=none

    ###############################
    # Topic / log defaults
    ###############################
    num.partitions={{ hostvars['localhost']['kafka_configurations']['topic_partitions'] }}
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    log.retention.hours={{ hostvars['localhost']['kafka_configurations']['log_retention_hours'] }}
    log.segment.bytes={{ hostvars['localhost']['kafka_configurations']['log_segment_bytes'] }}
    log.retention.bytes={{ hostvars['localhost']['kafka_configurations']['log_retention_bytes'] }}
    log.retention.check.interval.ms=300000
