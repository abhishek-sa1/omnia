#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Usage: prereq_checks.yml
storage_class_name: "nfs-client"
k8s_not_installed_fail_msg: "Failed. Kubernetes installation required.
  Execute scheduler/service_k8s_cluster.yml to install Kubernetes and re-run the playbook."
storage_class_missing_fail_msg: "Failed. StorageClass {{ storage_class_name }} is not present in the cluster.
  To resolve this, create the StorageClass by running scheduler/service_k8s_cluster.yml playbook."

# Usage: secrets_creation.yml
mysqldb_secrets_name: mysqldb-credentials
telemetry_cert_path: "/opt/omnia/telemetry/certs"
kafka_secrets:
  name: kafka-secrets
  cert_file: "{{ telemetry_cert_path }}/kafka.crt"
  cert_key: "{{ telemetry_cert_path }}/kafka.key"
  cacert_file: "{{ telemetry_cert_path }}/ca.crt"
  ca_key_file: "{{ telemetry_cert_path }}/ca.key"
  san_permissions: "0644"
  dir_permissions: "0755"
  ssl_limit: 365
  san_cn: "kafka-headless.telemetry.svc.cluster.local"
  san_dns:
    - "*.kafka-headless.telemetry.svc.cluster.local"
    - "*.kafka.telemetry.svc.cluster.local"
    - "localhost"
  san_ips:
    - "127.0.0.1"

# Usage: idrac_telemetry_deployment.yml
omnia_nfs_share: "{{ hostvars['localhost']['oim_shared_path'] }}/omnia"
service_cluster_idrac_telemetry_dir_path: "{{ omnia_nfs_share }}/service_cluster/telemetry/idrac_telemetry"
dir_permissions_755: "0755"
idrac_telemetry_github_repo: https://github.com/dell/iDRAC-Telemetry-Reference-Tools.git
reference_tools_stable_commit: "9a1c72b"
idrac_telemetry_reference_git_clone_path: "{{ service_cluster_idrac_telemetry_dir_path }}/iDRAC-Telemetry-Reference-Tools"
idrac_git_clone_error_msg: |
  Failed to clone iDRAC Telemetry GitHub repository from {{ idrac_telemetry_github_repo }}
  to {{ idrac_telemetry_reference_git_clone_path }} directory in NFS share.
idrac_telemetry_scripting_repo: "https://github.com/dell/iDRAC-Telemetry-Scripting.git"
idrac_telemetry_scripting_stable_commit: "f6999f5"
idrac_telemetry_scripting_git_clone_path: "{{ service_cluster_idrac_telemetry_dir_path }}/iDRAC-Telemetry-Scripting"
idrac_script_git_clone_error_msg: |
  Failed to clone iDRAC Telemetry GitHub repository from {{ idrac_telemetry_scripting_repo }}
  to {{ idrac_telemetry_scripting_git_clone_path }} directory in NFS share.
max_retries: 10
delay_count: 5
telemetry_namespace: "telemetry"
idrac_telemetry_k8s_name: idrac-telemetry
go_image: "docker.io/library/golang:1.24"
activemq_image: "docker.io/rmohr/activemq:5.15.9"
activemq_http_port_1: 8161
activemq_http_port_2: 61616
messagebus_http_port: 61613
configui_http_port: 8082
mysqldb_storage: 1Gi
mysqldb_pvc_name: mysqldb-storage-claim
mysqldb_k8s_name: mysqldb
mysqldb_name: "idrac_telemetrydb"
idrac_telemetry_service_name: "idrac-telemetry-service"
mysqldb_container_port1: 3306
mysqldb_container_port2: 33060
prometheus_pump_port: 2112
mysql_image: "docker.io/library/mysql:9.3.0"
pod_wait_timeout: "10m"
kafka_skip_verify: false
kafka_failed_msg: "Kafka pod did not come to ready state within {{ pod_wait_timeout }}  timeout."
idrac_telemetry_failed_msg: "idrac-telemetry pod did not come to ready state within {{ pod_wait_timeout }} timeout."

# Usage: prometheus_deployment.yml
prometheus_pvc_name: "prometheus-pvc"
prometheus_k8s_name: "prometheus"
prometheus_configmap_name: "prometheus-config"
prometheus_image: "docker.io/prom/prometheus:v3.4.1"
prometheus_container_port: 9090
prometheus_replicas: 1
prometheus_storage: 1Gi
prometheus_service_port: 30090

# Usage: include_composable_roles_config.yml
roles_config_path: "{{ hostvars['localhost']['input_project_dir'] }}/roles_config.yml"
roles_config_syntax_fail_msg: "Failed. Syntax errors present in role_config.yml. Fix errors and re-run playbook again."
service_cluster_metadata_path: "/opt/omnia/.data/service_cluster_metadata.yml"
metadata_perm: "0644"

# Usage: kafka_deployment.yml
kafka:
  app_name: "kafka"
  container_name: "kafka-controller"
  headless_service_name: "kafka-headless"
  lb_service_name: "kafka-loadbalancer"
  container_port1: 9092
  container_port2: 9093
  image: "bitnami/kafka:3.9.0"
  telemetry_topic_name: "idrac_telemetry"
  cluster-id: "kafka-cluster-id"

# Usage: telemetry_metadata.yml
telemetry_metadata_path: "/opt/omnia/telemetry/.telemetry_metadata.yml"
