#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Create namespace using k8s module
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ telemetry_namespace }}"

- name: Configure TLS certificate and secrets for kafka
  when: hostvars['localhost']['idrac_telemetry_collection_type'] == "kafka"
  block:
    - name: Generate TLS certificates
      ansible.builtin.command: |
        openssl req -new -newkey rsa:4096 -days {{ ssl_limit }} -nodes -x509 \
        -subj "/C=/ST=/L=/O=/CN=omnia-kafka" \
        -keyout {{ kafka_cert_file }} \
        -out {{ kafka_cert_key }}
      changed_when: false
      no_log: true

    - name: Configure Kubernetes Secret for Kafka
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ kafka_secrets_name }}"
            namespace: "{{ telemetry_namespace }}"
          type: Opaque
          data:
            tls.crt: "{{ lookup('file', kafka_cert_file) | b64encode }}"
            tls.key: "{{ lookup('file', kafka_cert_key) | b64encode }}"
            ca.crt: "{{ lookup('file', kafka_cert_file) | b64encode }}"  

- name: Configure secrets for idrac telemetry variables
  block:
    - name: Encode mysqldb username
      ansible.builtin.shell: |
        set -o pipefail
        echo -n "{{ hostvars['localhost']['mysqldb_user'] }}" | base64
      register: mysqldb_user_encoded
      changed_when: false
      no_log: true

    - name: Encode mysqldb password
      ansible.builtin.shell: |
        set -o pipefail
        echo -n "{{ hostvars['localhost']['mysqldb_password'] }}" | base64
      register: mysqldb_password_encoded
      changed_when: false
      no_log: true

    - name: Encode mysqldb password for root user
      ansible.builtin.shell: |
        set -o pipefail
        echo -n "{{ hostvars['localhost']['mysqldb_root_password'] }}" | base64
      register: mysqldb_root_password_encoded
      changed_when: false
      no_log: true

    - name: Configure Kubernetes Secret for MySQL
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ mysqldb_secrets_name }}"
            namespace: "{{ telemetry_namespace }}"
          type: Opaque
          data:
            mysqldb_user: "{{ mysqldb_user_encoded.stdout }}"
            mysqldb_password: "{{ mysqldb_password_encoded.stdout }}"
            mysqldb_root_password: "{{ mysqldb_root_password_encoded.stdout }}"
