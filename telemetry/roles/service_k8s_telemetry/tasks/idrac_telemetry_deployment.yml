#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Create directory for iDRAC telemetry
  ansible.builtin.file:
    path: "{{ service_cluster_idrac_telemetry_dir_path }}"
    state: directory
    mode: "{{ dir_permissions_755 }}"
  delegate_to: oim
  connection: ssh

- name: Git checkout for iDRAC Telemetry Reference Tools
  block:
    - name: Checkout iDRAC Telemetry GitHub repo
      ansible.builtin.git:
        repo: "{{ idrac_telemetry_github_repo }}"
        dest: "{{ idrac_telemetry_reference_git_clone_path }}"
        version: "{{ reference_tools_stable_commit }}"
        update: false
      delegate_to: oim
      connection: ssh
      register: clone_idrac_telemetry
      until: clone_idrac_telemetry is succeeded
      retries: "{{ max_retries }}"
      delay: "{{ delay_count }}"

  rescue:
    - name: Fail if iDRAC telemetry Git clone fails
      ansible.builtin.fail:
        msg: "{{ idrac_git_clone_error_msg.splitlines() | join(' ') }}"
      when: clone_idrac_telemetry is failed

- name: Git clone for iDRAC Telemetry script
  block:
    - name: Checkout iDRAC Telemetry GitHub repo
      ansible.builtin.git:
        repo: "{{ idrac_telemetry_scripting_repo }}"
        dest: "{{ idrac_telemetry_scripting_git_clone_path }}"
        version: "{{ idrac_telemetry_scripting_stable_commit }}"
        update: false
      delegate_to: oim
      connection: ssh
      register: clone_idrac_script
      until: clone_idrac_script is succeeded
      retries: "{{ max_retries }}"
      delay: "{{ delay_count }}"
  rescue:
    - name: Fail if iDRAC telemetry Git clone fails
      ansible.builtin.fail:
        msg: "{{ idrac_script_git_clone_error_msg.splitlines() | join(' ') }}"
      when: clone_idrac_script is failed

- name: Set idrac-telemetry replica count
  ansible.builtin.set_fact:
    idrac_telemetry_replicas: >-
      {{
        service_cluster_metadata
        | dict2items
        | selectattr('value.parent_status', 'defined')
        | selectattr('value.parent_status', 'equalto', true)
        | list
        | length
      }}

- name: Render and apply idrac-telemetry StatefulSet
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'idrac_telemetry_statefulset.yml.j2') }}"

- name: Service for idrac telemetry
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ idrac_telemetry_service_name }}"
        namespace: "{{ telemetry_namespace }}"
        labels:
          app: "{{ idrac_telemetry_service_name }}"
      spec:
        clusterIP: None
        ports:
          - name: mysql-port-1
            port: "{{ mysqldb_container_port1 }}"
          - name: mysql-port-2
            port: "{{ mysqldb_container_port2 }}"
          - name: pump-port
            port: "{{ prometheus_pump_port }}"
        selector:
          app: "{{ idrac_telemetry_k8s_name }}"
