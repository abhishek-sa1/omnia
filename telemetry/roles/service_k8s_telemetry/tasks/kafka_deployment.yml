#  Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get service_cluster kube-control-plane node count
  ansible.builtin.set_fact:
    cp_node_count: "{{ groups['kube_control_plane'] | length }}"

- name: Create Kafka headless service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ kafka.headless_service_name }}"
        namespace: "{{ telemetry_namespace }}"
        labels:
          app: "{{ kafka.app_name }}"
      spec:
        clusterIP: None
        selector:
          app: "{{ kafka.app_name }}"
        ports:
          - name: kafka
            port: 9092

- name: Create Kafka LoadBalancer service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ kafka.lb_service_name }}"
        namespace: "{{ telemetry_namespace }}"
        labels:
          app: "{{ kafka.app_name }}"
      spec:
        type: LoadBalancer
        selector:
          app: "{{ kafka.app_name }}"
        ports:
          - name: kafka
            port: 9092

- name: Check if Kafka KRaft cluster ID secret exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ kafka.cluster_id }}"
    namespace: "{{ telemetry_namespace }}"
  register: existing_cluster_id

- name: Generate cluster ID
  ansible.builtin.command: uuidgen
  register: cluster_id
  changed_when: false
  when: existing_cluster_id.resources | length == 0
  no_log: true

- name: Create Kafka KRaft cluster ID secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ kafka.cluster_id }}"
        namespace: "{{ telemetry_namespace }}"
      type: Opaque
      stringData:
        cluster-id: "{{ cluster_id.stdout }}"
  when: existing_cluster_id.resources | length == 0
  no_log: true

- name: create Kafka server configuration ConfigMap
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'kafka-config-map.yml.j2') | from_yaml }}"

- name: Deploy Kafka StatefulSet
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'kafka-statefulset.yaml.j2') | from_yaml }}"
