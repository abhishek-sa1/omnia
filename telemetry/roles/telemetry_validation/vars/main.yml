# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Usage: validate_telemetry_config.yml
omnia_metadata_file: "/opt/omnia/.data/oim_metadata.yml"
telemetry_config_file: "{{ input_project_dir }}/telemetry_config.yml"
fail_msg_telemetry_config_file: "telemetry_config.yml file doesn't exist."
pause_time_15: 15
bmc_group_data_filename: "/opt/omnia/telemetry/bmc_group_data.csv"
warning_telemetry_support_false: |
  "[WARNING] idrac_telemetry_support are false in telemetry_config.yml.
  Omnia does not deploy telemetry feature if none of the support category is true."
telemetry_config_syntax_fail_msg: "Failed. Syntax errors present in telemetry_config.yml. Fix errors and re-run playbook again."
warning_idrac_telemetry_support_false: |
  "[WARNING] idrac_telemetry_support is set to false in telemetry_config.yml. This means iDRAC telemetry will not be activated.
  To use telemetry, set idrac_telemetry_support to true in telemetry_config.yml.
  Note that Omnia does not support disabling telemetry if containers are already running.
  To remove telemetry containers, use the utils/oim_cleanup.yml playbook."
warning_idrac_telemetry_support_true: |
  "[WARNING] idrac_telemetry_support is set to true in telemetry_config.yml.
  iDRAC telemetry will be activated for all BMC IPs listed in {{ bmc_group_data_filename }}.
  Confirm that all BMC IPs are reachable from the OIM and respective service cluster nodes for telemetry to function properly.
  Make sure that Redfish is enabled and the iDRAC has a datacenter license.
  Also, ensure that the firmware version is greater than 4 for iDRAC9 or greater than 1 for iDRAC10."


# Usage: validate_image_tars.yml
# noqa: yaml[line-length]
omnia_images_tar_missing_msg: |
  Following images tarball(s) are missing: {{ missing_tars }}.
  To ensure these tar files are present at {{ omnia_images_dir_path }}, execute the utility below:
    `ansible-playbook utils/save_container_images.yml -e 'visualization_support=true idrac_telemetry_support=true k8s_support=true'`
  After saving the images, re-run the telemetry playbook.

# Usage: read_software_config.yml
software_config_file: "{{ input_project_dir }}/software_config.json"
# local_repo_sn_missing_msg: |
#   [ERROR] It seems local_repo not executed with service_node entry in software_config.yml.
#   Kindly execute local_repo.yml with `service_node` entry in softwares list in software_config.yml
#   and then execute telemetry.yml.
local_repo_service_missing_msg: |
  [ERROR] It seems local_repo not executed with service_k8s/service_node entry in software_config.yml.
  Kindly execute local_repo.yml with `service_k8s` entry in softwares list in software_config.json
  and then execute telemetry.yml.
local_repo_access_path: "/opt/omnia/provision/local_repo_access.yml"
# sn_packages_file: "{{ input_project_dir }}/config/{{ software_config.cluster_os_type }}/{{ software_config.cluster_os_version }}/service_node.json"
k8s_packages_file: "{{ input_project_dir }}/config/x86_64/{{ software_config.cluster_os_type }}/{{ software_config.cluster_os_version }}/service_k8s.json"
downloaded_sw_log_csv: "/opt/omnia/log/local_repo/x86_64/software.csv"
software_config_syntax_fail_msg: "Failed. Syntax errors present in software_config.json. Fix errors and re-run playbook again."

# Usage: validate_idrac_inventory.yml
bmc_group_data_file_not_found_msg: "Failed. The BMC data file: {{ bmc_group_data_filename }} does not exist.
 Please execute discovery_provision.yml to Generate BMC data file."
bmc_group_data_headers: "BMC_IP,GROUP_NAME,PARENT"
service_kube_control_plane_group_fail_msg: "Failed. The group 'kube_control_plane' is not defined in inventory."
service_kube_control_plane_details_fail_msg: "Failed. The group 'kube_control_plane' does not have bmc_ip defined."
service_kube_control_plane_invalid_ip_fail_msg: "Failed. The group 'kube_control_plane' has an invalid bmc_ip defined."
openchami_work_dir: "/opt/omnia/openchami/workdir"
nodes_dir: "{{ openchami_work_dir }}/nodes"
openchami_nodes_vars_path: "{{ nodes_dir }}/nodes.yaml"

# Usage: include_network_spec.yml
network_spec_path: "{{ input_project_dir }}/network_spec.yml"
fail_msg_network_spec_file: "network_spec.yml file doesn't exist."
network_spec_syntax_fail_msg: "Failed. Syntax errors present in network_spec.yml. Fix errors and re-run playbook again."

# Usage: check_service_node_internet.yml
service_cluster_no_internet: "Service Cluster does not have internet access to deploy idrac telemetry collection on service cluster.
      Please enable internet on service cluster and rerun telemetry.yml."
internet_retrialls: 5
internet_retrialls_delay: 3

# Usage: validate_telemetry_inventory.yml
enable_federated_telemetry_fail_msg: |
  "It is recommended to set federated_idrac_telemetry_collection to true in telemetry_config.yml, as a service k8s cluster has been provisioned."
telemetry_empty_inventory_fail_msg: |
  "Failed. Either inventory is not provided or inventory does not have required groups. Re-run playbook with inventory by providing -i inventory.
  Required groups in inventory are kube_control_plane, kube_node, etcd"
