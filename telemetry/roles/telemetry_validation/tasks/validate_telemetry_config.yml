# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Include telemetry_config_file.yml
- name: Check that the telemetry_config.yml exists
  ansible.builtin.stat:
    path: "{{ telemetry_config_file }}"
  register: stat_result

- name: Fail if telemetry_config.yml file doesn't exist
  ansible.builtin.fail:
    msg: "{{ fail_msg_telemetry_config_file }}"
  when: not stat_result.stat.exists

- name: Include variable file telemetry_config.yml
  block:
    - name: Include variable file telemetry_config.yml
      ansible.builtin.include_vars: "{{ telemetry_config_file }}"
      register: include_telemetry_config
      no_log: true
  rescue:
    - name: Failed to include telemetry_config.yml
      ansible.builtin.fail:
        msg: "{{ telemetry_config_syntax_fail_msg }} Possible Syntax Error Hints: {{ include_telemetry_config.message }}"

- name: Include metadata vars
  ansible.builtin.include_vars: "{{ omnia_metadata_file }}"
  register: include_metadata
  no_log: true

- name: Set support values
  ansible.builtin.set_fact:
    idrac_telemetry_support: "{{ idrac_telemetry_support | lower }}"
    federated_idrac_telemetry_collection: "{{ federated_idrac_telemetry_collection | lower }}"

- name: Warning for idrac_telemetry_support is currently set to false
  ansible.builtin.pause:
    seconds: "{{ pause_time_15 }}"
    prompt: "{{ warning_idrac_telemetry_support_false }}"
  when: not idrac_telemetry_support

- name: Warning for idrac_telemetry_support is currently set to true
  ansible.builtin.pause:
    seconds: "{{ pause_time_15 }}"
    prompt: "{{ warning_idrac_telemetry_support_true }}"
  when: idrac_telemetry_support

- name: Check for existing telemetry metadata
  ansible.builtin.stat:
    path: "{{ telemetry_metadata_file_path }}"
  register: telemetry_metadata_stat
  when: federated_idrac_telemetry_collection

- name: Load existing telemetry metadata
  ansible.builtin.include_vars:
    file: "{{ telemetry_metadata_file_path }}"
    name: existing_metadata
  when: federated_idrac_telemetry_collection and telemetry_metadata_stat.stat.exists

- name: Fail if collection type changed after initial deployment
  ansible.builtin.fail:
    msg: "{{ msg_collection_type_mismatch }}"
  when: >
    federated_idrac_telemetry_collection and telemetry_metadata_stat.stat.exists and
    existing_metadata.idrac_telemetry_collection_type != idrac_telemetry_collection_type

# - name: Validate k8s prometheus, scrape interval and prometheus gaudi
#   ansible.builtin.include_tasks: validate_k8s_prometheus_prometheus_gaudi.yml
#   when: k8s_prometheus_support or prometheus_gaudi_support

# - name: Validate k8s prometheus when prometheus gaudi is true
#   ansible.builtin.include_tasks: validate_prometheus_gaudi.yml
#   when: prometheus_gaudi_support
