# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialize variables
  ansible.builtin.set_fact:
    http_proxy_input_status: false
    https_proxy_input_status: false
    no_proxy_input_status: false
    proxy_status: false

- name: Include site_config.yml
  ansible.builtin.include_vars: "{{ site_config_file }}"

- name: Validate http_proxy variable provided
  ansible.builtin.set_fact:
    http_proxy_input_status: true
  when:
    - proxy[0].http_proxy is defined
    - proxy[0].http_proxy | default("", true) | length > 1

- name: Validate https_proxy variable provided
  ansible.builtin.set_fact:
    https_proxy_input_status: true
  when:
    - proxy[0].https_proxy is defined
    - proxy[0].https_proxy | default("", true) | length > 1

- name: Validate no_proxy variable provided
  ansible.builtin.set_fact:
    no_proxy_input_status: true
  when:
    - proxy[0].no_proxy is defined
    - proxy[0].no_proxy | default("", true) | length > 1

- name: Validate both http_proxy and https_proxy input provided
  ansible.builtin.fail:
    msg: "{{ invalid_proxy_failure_msg }}"
  when:
    - not https_proxy_input_status and http_proxy_input_status or
      not http_proxy_input_status and https_proxy_input_status

- name: Validate proxy
  when:
    - http_proxy_input_status
    - https_proxy_input_status
  block:
    - name: Validate http_proxy, https_proxy and no_proxy configured as environment variables
      ansible.builtin.assert:
        that:
          - lookup('env', 'http_proxy') | length > 1
          - lookup('env', 'https_proxy') | length > 1
          - lookup('env', 'no_proxy') | length > 1
          - lookup('env', 'http_proxy') == proxy[0].http_proxy
          - lookup('env', 'https_proxy') == proxy[0].https_proxy
          - oim_hostname in lookup('env', 'no_proxy')
          - admin_nic_ip in lookup('env', 'no_proxy')
        fail_msg: "{{ proxy_env_fail_msg }}"

    - name: Try updating repos in Ubuntu
      when: oim_os in oim_os_ubuntu
      block:
        - name: Update repos in Ubuntu
          ansible.builtin.apt:
            update_cache: true
          register: update_repos
          until: update_repos is not failed
          retries: "{{ repo_retries }}"
          delay: "{{ repo_delay }}"
      rescue:
        - name: Failed to update repos
          ansible.builtin.fail:
            msg: "{{ update_repos_fail_msg }}"

    - name: Try updating repos in RHEL/Rocky
      when:
        - oim_os in oim_os_redhat or
          oim_os in oim_os_rocky
      block:
        - name: Add proxy to dnf.conf in RockyLinux OS if http_proxy is defined
          community.general.ini_file:
            path: "{{ dnf_conf_path }}"
            section: main
            option: proxy
            value: "{{ proxy[0].http_proxy | default(omit) }}"
            state: "{{ proxy[0].http_proxy | default(False) | ternary('present', 'absent') }}"
            no_extra_spaces: true
            mode: "{{ conf_file_mode }}"

        - name: Update repos in RHEL/Rocky
          ansible.builtin.dnf:
            update_cache: true
          register: update_repos
          until: update_repos is not failed
          retries: "{{ repo_retries }}"
          delay: "{{ repo_delay }}"
      rescue:
        - name: Failed to update repos
          ansible.builtin.fail:
            msg: "{{ update_repos_fail_msg }}"

    - name: Set proxy_status to true
      ansible.builtin.set_fact:
        proxy_status: true
