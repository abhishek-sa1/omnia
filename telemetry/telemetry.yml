# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set_fact for fetch omnia config credentials
  hosts: localhost
  connection: local
  tasks:
    - name: Set dynamic run tags including 'telemetry'
      ansible.builtin.set_fact:
        omnia_run_tags: "{{ (ansible_run_tags | default([]) + ['telemetry']) | unique }}"
        cacheable: true

# - name: Invoke validate_config.yml to perform L1 and L2 validations
#   ansible.builtin.import_playbook: ../input_validation/validate_config.yml

- name: Invoke get_config_credentials.yml
  ansible.builtin.import_playbook: ../utils/credential_utility/get_config_credentials.yml

- name: Include input project directory
  when: not project_dir_status | default(false) | bool
  ansible.builtin.import_playbook: ../utils/include_input_dir.yml

# - name: Create provision container group
#   ansible.builtin.import_playbook: ../utils/create_container_group.yml
#   vars:
#     oim_group: true

- name: Validate telemetry input parameters
  hosts: localhost
  connection: local
  any_errors_fatal: true
  tasks:
    - name: Validate telemetry input parameters
      ansible.builtin.include_role:
        name: telemetry_validation
        tasks_from: validation_status_check.yml

# - name: Check if Service cluster has internet
#   hosts: kube_control_plane, kube_node
#   connection: ssh
#   any_errors_fatal: true
#   tasks:
#     - name: Validate telemetry input parameters
#       ansible.builtin.include_role:
#         name: telemetry_validation
#         tasks_from: check_service_node_internet.yml
#       when:
#         - hostvars['localhost']['idrac_telemetry_support']
#         - hostvars['localhost']['groups']['kube_control_plane'] is defined
#         - hostvars['localhost']['groups']['kube_control_plane'] | length > 0

- name: Validate service k8s cluster
  hosts: kube_control_plane[0]
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Validate service k8s cluster
      ansible.builtin.include_role:
        name: service_k8s_telemetry
        tasks_from: prereq_checks.yml

# service_k8s_prereq
- name: Initiate pre-requisites for service cluster
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Initiate pre-requisites
      ansible.builtin.include_role:
        name: service_k8s_telemetry
        tasks_from: generate_service_cluster_metadata.yml

- name: Deployment of telemetry pods in service cluster
  hosts: kube_control_plane[0]
  connection: ssh
  gather_facts: false
  tasks:
    - name: Deployment of telemetry pods
      ansible.builtin.include_role:
        name: service_k8s_telemetry

- name: Enable idrac telemetry
  hosts: kube_control_plane[0]
  gather_facts: false
  tasks:
    - name: Enable idrac telemetry
      ansible.builtin.include_role:
        name: idrac_telemetry

- name: Detailed Telemetry Report
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    telemetry_report_path: "/opt/omnia/telemetry/idrac_telemetry_report.yml"
  tasks:
    - name: Detailed Telemetry Report
      ansible.builtin.debug:
        msg: "Check the file at {{ telemetry_report_path }} in omnia_core container for detailed telemetry report."
      when:
        - hostvars['localhost']['idrac_telemetry_support']
