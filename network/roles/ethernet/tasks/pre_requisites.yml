# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Install ansible-pylibssh
  ansible.builtin.pip:
    name: ansible-pylibssh
    state: present
    executable: pip3

- name: Install paramiko
  ansible.builtin.pip:
    name: paramiko
    state: present
    executable: pip3
    extra_args: "-i https://pypi.org/simple/"
  delegate_to: localhost

- name: Check if ethernet_tor_input.yml exists
  ansible.builtin.stat:
    path: "{{ tor_config_file }}"
  register: stat_result

- name: Fail if ethernet_tor_input.yml file doesn't exist
  ansible.builtin.fail:
    msg: "{{ fail_msg_tor_config_file }}"
  when: not stat_result.stat.exists

- name: Check if ethernet_sseries_input.yml exists
  ansible.builtin.stat:
    path: "{{ config_file }}"
  register: stat_result

- name: Fail if ethernet_sseries_input.yml file doesn't exist
  ansible.builtin.fail:
    msg: "{{ fail_msg_config_file }}"
  when: not stat_result.stat.exists

- name: Check if ethernet_zseries_input.yml exists
  ansible.builtin.stat:
    path: "{{ ethernet_zseries_file }}"
  register: stat_result

- name: Fail if ethernet_zseries_input.yml file doesn't exist
  ansible.builtin.fail:
    msg: "{{ fail_msg_zseries_file }}"
  when: not stat_result.stat.exists

- name: Check switch model name
  dellemc.os10.os10_command:
    commands: show system | grep "Current Type"
  register: model_type
  vars:
    ansible_ssh_user: "{{ ethernet_switch_username }}"
    ansible_ssh_password: "{{ ethernet_switch_password }}"

- name: Save switch model name
  ansible.builtin.set_fact:
    model_type: "{{ model_type.stdout[0].split(' ')[-1] }}"

- name: Initialize variable for switch type
  ansible.builtin.set_fact:
    sseries: false
    zseries: false

- name: Include tor_config_file file
  ansible.builtin.include_vars: "{{ tor_config_file }}"
  when: "'S3' in model_type or 'S4' in model_type"

- name: Include ethernet_sseries_input.yml file
  ansible.builtin.include_vars: "{{ config_file }}"
  when:
    - "'S3' not in model_type and 'S4' not in model_type"
    - "'Z' not in model_type and 'N' not in model_type"

- name: Pre-requisite tasks for ethernet switches which are N or Z series
  ansible.builtin.include_vars: "{{ ethernet_zseries_file }}"
  when: "'Z' in model_type or 'N' in model_type"

- name: Update S series variable
  ansible.builtin.set_fact:
    sseries: true
  when: "'Z' not in model_type and 'N' not in model_type"

- name: Update Z series variable
  ansible.builtin.set_fact:
    zseries: true
  when: "'Z' in model_type or 'N' in model_type"

- name: Assert save_changes_to_startup variable
  ansible.builtin.assert:
    that: save_changes_to_startup == true or save_changes_to_startup == false
    success_msg: "{{ success_msg_save_config }}"
    fail_msg: "{{ fail_msg_save_config }}"

- name: Initialize snmp_enabled
  ansible.builtin.set_fact:
    snmp_enabled: false

- name: Verify snmp_trap_destination IP address
  ansible.builtin.set_fact:
    snmp_enabled: true
  when: snmp_trap_destination | length > 1

- name: Validate snmp parameters
  when: snmp_enabled
  block:
    - name: Assert snmp trap destination address
      ansible.builtin.assert:
        that:
          - snmp_trap_destination | length > 7
        success_msg: "{{ success_snmp_trap_dest }}"
        fail_msg: "{{ fail_snmp_trap_dest }}"

    - name: Assert snmp_community_name value
      ansible.builtin.assert:
        that:
          - snmp_community_name | length > 1
        success_msg: "{{ snmp_community_success_msg }}"
        fail_msg: "{{ snmp_community_fail_msg }}"
