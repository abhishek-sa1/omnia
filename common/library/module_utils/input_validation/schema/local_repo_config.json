{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "user_repo_url": {
  "type": ["array", "null"],
  "items": {
    "type": "object",
    "properties": {
      "gpgkey": {
        "type": "string",
        "pattern": "^(|https?:\\/\\/\\S.+)$"

      },
      "url": {
        "type": "string",
        "format": "uri",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1
      },
      "name": {
        "type": "string",
        "minLength": 1,
        "pattern": "^(?!\\s*$).+"
      },
      "policy": {
        "type": "string",
        "enum": ["always", "partial", "never"]
      },
      "sslcacert": {
        "type": ["string","null"]
      },
      "sslclientkey": {
        "type": ["string","null"]
      },
      "sslclientcert": {
        "type": ["string","null"]
      }
    },
    "required": ["gpgkey", "url", "name"],
    "allOf": [
          {
            "if": {
              "required": ["sslcacert"],
              "properties": {
                "sslcacert": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslclientkey", "sslclientcert"],
              "properties": {
                "sslclientkey": { "minLength": 1 },
                "sslclientcert": { "minLength": 1 }
              }
            }
          },
          {
            "if": {
              "required": ["sslclientkey"],
              "properties": {
                "sslclientkey": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslcacert", "sslclientcert"],
              "properties": {
                "sslcacert": { "minLength": 1 },
                "sslclientcert": { "minLength": 1 }
              }
            }
          },
          {
            "if": {
              "required": ["sslclientcert"],
              "properties": {
                "sslclientcert": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslcacert", "sslclientkey"],
              "properties": {
                "sslcacert": { "minLength": 1 },
                "sslclientkey": { "minLength": 1 }
              }
            }
          }
        ]
  }
},

    "user_registry": {
      "type": ["array", "null"],
      "minProperties": 2,
        "properties": {
          "cert_path": {
            "type": "string",
            "pattern": "^(?!\\s*$).+",
            "minLength": 1
          },
          "key_path": {
            "type": "string",
            "pattern": "^(?!\\s*$).+"
          },
          "host": {
            "type": "string",
            "pattern": "^(\\d{1,3}\\.){3}\\d{1,3}:\\d+$|^[a-zA-Z0-9.-]+$",
            "minLength": 1
          }
        },
        "required": [ "host", "cert_path"],
      "description": "Registry URLs provided by the user containing images required for the cluster."
    },
    "ubuntu_os_url": {
      "type": [ "string", "null" ],
      "description": "URL for Ubuntu OS packages, mandatory when cluster_os_type is Ubuntu."
    },
    "rhel_os_url": {
      "type": "array",
      "items": {
          "type": "object",
          "properties": {
          "gpgkey": {
            "type": "string",
            "pattern": "^(|https?:\\/\\/\\S.+)$" 
          },
          "url": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "pattern": "^(?!\\s*$).+" 
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(?!\\s*$).+"  
          },
          "policy": {
          "enum": ["always", "partial", "never"]
          }
          },
	    "required": ["gpgkey", "url", "name"],
	    "additionalProperties": false
      }
    },
    "omnia_repo_url_rhel": {
      "type": ["array", "null"],
      "items": {
        "type": "object",
        "properties": {
            "url": {
            "type": "string",
            "pattern": "^https?:\\/\\/(?!\\s*$).+",
            "minLength": 1
          },
          "gpgkey": {
            "type": "string",
            "pattern": "^(|https?:\\/\\/\\S.+)$"
          },
          "sslcacert": {
            "type": ["string","null"]
          },
          "sslclientkey": {
            "type": ["string","null"]
          },
          "sslclientcert": {
            "type": ["string","null"]
          },
          "name": {
            "type": "string",
            "pattern": "^(?!\\s*$).+",
            "minLength": 1
          },
          "policy": {
            "enum": ["always", "partial", "never"]
          }
        },
        "required": [
          "url",
          "gpgkey",
          "name"
        ],
       "allOf": [
          {
            "if": {
              "required": ["sslcacert"],
              "properties": {
                "sslcacert": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslclientkey", "sslclientcert"],
              "properties": {
                "sslclientkey": { "minLength": 1 },
                "sslclientcert": { "minLength": 1 }
              }
            }
          },
          {
            "if": {
              "required": ["sslclientkey"],
              "properties": {
                "sslclientkey": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslcacert", "sslclientcert"],
              "properties": {
                "sslcacert": { "minLength": 1 },
                "sslclientcert": { "minLength": 1 }
              }
            }
          },
          {
            "if": {
              "required": ["sslclientcert"],
              "properties": {
                "sslclientcert": { "minLength": 1 }
              }
            },
            "then": {
              "required": ["sslcacert", "sslclientkey"],
              "properties": {
                "sslcacert": { "minLength": 1 },
                "sslclientkey": { "minLength": 1 }
              }
            }
          }
        ]

      },
      "description": "URLs for repositories from which RPMs will be downloaded for Omnia features on RHEL, with SSL configuration options and policy."
    },
     "pulp_protocol_https": {
      "type": "boolean",
      "description": "Set to true to enable secure (HTTPS) connection to the Pulp server. Default is false."
    },
    "enable_routed_internet": {
      "type" : "boolean",
      "description": " enable_routed_internet should be set to true for clusters with partial or no dedicated internet access."

    }
  },
  "required": ["rhel_os_url","omnia_repo_url_rhel"],
  "additionalProperties": false
  }
