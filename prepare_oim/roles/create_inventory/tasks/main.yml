# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Create omnia_inventory directory
  ansible.builtin.file:
    path: "{{ inventory_directory_path }}"
    state: directory
    mode: "{{ inventory_dir_mode }}"

- name: Check each inventory file presence
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    mode: "{{ inventory_file_mode }}"
  with_items: "{{ inventory_file_path_list }}"

- name: Read content of all inventory files
  ansible.builtin.slurp:
    path: "{{ inventory_directory_path }}/{{ item }}"
  register: inventory_content
  with_items: "{{ inventory_file_name_list }}"

- name: Truncate content of inventory file where group name is absent
  ansible.builtin.command: truncate -s 0 "{{ item.invocation.module_args.path }}"
  with_items: "{{ inventory_content.results }}"
  when: item.item not in item.content | b64decode
  changed_when: true

- name: Add header comment to inventory files where header comment is absent
  ansible.builtin.lineinfile:
    path: "{{ item.invocation.module_args.path }}"
    line: "{{ inventory_header }}"
    insertbefore: BOF
    create: true
    mode: "{{ inventory_file_mode }}"
  with_items: "{{ inventory_content.results }}"
  when: inventory_header not in item.content | b64decode

- name: Add Group Name to inventory files where group name is absent
  ansible.builtin.lineinfile:
    path: "{{ item.invocation.module_args.path }}"
    line: "[{{ item.item }}]"
    create: true
    mode: "{{ inventory_file_mode }}"
  with_items: "{{ inventory_content.results }}"
  when: item.item not in item.content | b64decode
