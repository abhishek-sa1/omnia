# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Usage: main.yml
omnia_metadata_file: "/opt/omnia/.data/oim_metadata.yml"

# Usage: firewall_settings.yml
oim_os_repo_fail_msg: |
  Failed to install firewalld. This could be due to the OS repository not being configured on OIM.
  Please configure the OS repository on OIM and rerun the playbook.

internal_nfs_services:
  - nfs
  - rpc-bind

ntp_firewall_service: ntp

# Usage: prepare_oim_completion.yml
telemetry_dir: "/opt/omnia/telemetry"
dir_permissions_755: "0755"
bmc_group_data_filename: "{{ telemetry_dir }}/bmc_group_data.csv"
bmc_group_data_template: "bmc_group_data.j2"
file_permissions: "0644"
prepare_oim_completion_msg: |
  The playbook prepare_oim.yml has completed successfully. To create the offline repositories and
  registry for the cluster nodes, please execute the playbook local_repo/local_repo.yml as the next step.

# podman_login.yml
login_cmd: "podman login docker.io -u {{ docker_username }} -p {{ docker_password }}"
retry_count: "5"
delay_time: "10"
podman_login_fail_msg: "Podman login failed. Please ensure the podman login credentials in the input/omnia_config_credentials.yml are valid.
 If they are, this error can occur due to a pull limit issue or multiple requests. Please try running the playbook again after waiting for a while."

# Usage: add_known_hosts.yml
ssh_config: "/root/.ssh/config"
kubespray_versions: "{{ hostvars['localhost']['kubespray_versions'] | default([]) }}"

# Usage: omnia_service.yml
omnia_service_path:
  - { src: "{{ role_path }}/templates/omnia.service.j2", dest: "/etc/systemd/system/omnia.target", mode: "0644" }
network_services:
  - network-online.target
  - network.target
