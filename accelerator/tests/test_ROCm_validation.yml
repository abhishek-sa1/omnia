# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Validating for Nodes having GPU

- name: Validating the ROCm Version
  hosts: GPU_node
  tasks:
    - name: ROCm Version
      block:
        - name: Execute command to get the version
          ansible.builtin.command: yum info rocm-libs # noqa: command-instead-of-module
          register: rocm_installed_version
          changed_when: false
          tags: TC_001

        - name: Execute command
          ansible.builtin.shell: module load rocm && hipcc test_ROCm_code.cpp -o test_ROCm_code
          register: rocm_verify
          changed_when: false
          tags: TC_002, TC_003, TC_004

        - name: Checking Version
          ansible.builtin.assert:
            that:
              - "{{ ROCm_Default_version }} in rocm_installed_version.stdout"
            success_msg: "{{ version_pass }}"
            fail_msg: "{{ version_fail }}"

        - name: Verify ROCm Installation successful
          ansible.builtin.assert:
            that:
              - "'Success' in rocm_verify.stdout"
            success_msg: "{{ installation_pass }}"
            fail_msg: "{{ installation_fail }}"

# Validating for Nodes with NO GPU

- name: Validating the ROCm Version
  hosts: No_GPU_node
  tasks:
    - name: Get ROCm Version
      block:
        - name: Execute command to get the version
          ansible.builtin.command: yum info rocm-libs # noqa: command-instead-of-module
          register: rocm_installed_version
          changed_when: false
          tags: TC_003, TC_004, TC_006

        - name: Verify ROCm Installation is not successful
          ansible.builtin.assert:
            that:
              - "'Command Not found' in rocm_installed_version.stdout"
            success_msg: "{{ Not_installed_pass }}"
            fail_msg: "{{ Not_installed_fail }}"

# Testcase OMNIA_1.4_ROCm_TC_005
# Verify ROCm toolkit is not installed on login_node if login_node_required is false.

- name: Validating ROCm
  hosts: login_node
  tasks:
    - name: Validate ROCm installed
      block:
        - name: Execute command
          ansible.builtin.shell: module load rocm && hipcc test_ROCm_code.cpp -o test_ROCm_code
          register: rocm_verify
          changed_when: false
          tags: TC_005

        - name: Verify ROCm Installation successful
          ansible.builtin.assert:
            that:
              - "'Fail' in rocm_verify.stdout"
            success_msg: "{{ Not_installed_pass }}"
            fail_msg: "{{ Not_installed_fail }}"

- name: Validating ROCm
  hosts: manager, compute, nfs_node
  tasks:
    - name: Validate ROCm installed
      block:
        - name: Execute command
          ansible.builtin.shell: module load rocm && hipcc test_ROCm_code.cpp -o test_ROCm_code
          register: rocm_verify
          changed_when: false
          tags: TC_004

        - name: Verify ROCm Installation successful
          ansible.builtin.assert:
            that:
              - "'Success' in roc_verify.stdout"
            success_msg: "{{ installation_pass }}"
            fail_msg: "{{ installation_fail }}"

# Testcase OMNIA_1.4_ROCm_TC_007
# Validate ROCm version on client nodes with user provided ROCm version.

- name: Validating the ROCm Version
  hosts: No_GPU_node
  tasks:
    - name: Validate ROCm
      block:
        - name: Execute command to get the version
          ansible.builtin.command: yum info rocm-libs # noqa: command-instead-of-module
          register: rocm_installed_version
          changed_when: false
          tags: TC_007

        - name: Checking Version
          ansible.builtin.assert:
            that:
              - "{{ ROCm_Default_version }} in rocm_installed_version.stdout"
            success_msg: "{{ version_pass }}"
            fail_msg: "{{ version_fail }}"