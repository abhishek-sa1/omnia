# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Ensure admin subnet is present in squid.conf
  ansible.builtin.lineinfile:
    path: "{{ squid_proxy_conf_path }}"
    line: "acl localnet src {{ pxe_nic_subnet }}/{{ network_data.admin_network.netmask_bits }}"
    insertafter: "^acl localnet src 192.168.0.0/16"
  register: configure_proxy_admin_subnet

- name: Configure proxy details in squid.conf
  when: proxy_status
  block:
    - name: Set proxy_host and proxy_port variables
      ansible.builtin.set_fact:
        proxy_host: "{{ proxy[0].http_proxy | regex_search('http://([^:]+):', '\\1') }}"
        proxy_port: "{{ proxy[0].http_proxy | regex_search(':(\\d+)', '\\1') }}"

    - name: Update proxy configuration
      ansible.builtin.lineinfile:
        path: "{{ squid_proxy_conf_path }}"
        line: "{{ item.line }}"
        insertafter: "{{ item.insertafter }}"
      register: configure_proxy_input
      with_items:
        - { line: "cache_peer {{ proxy_host[0] }} parent {{ proxy_port[0] }} 0 no-query default", insertafter: "EOF" }
        - { line: "never_direct allow localnet", insertafter: "^http_access allow localnet" }

- name: Restart squid service if config changed
  ansible.builtin.service:
    name: squid
    state: restarted
    enabled: true
  when:
    - configure_proxy_admin_subnet.changed
      or configure_proxy_input.changed

- name: Gathering service facts
  ansible.builtin.service_facts:

- name: Restart squid service if not started
  ansible.builtin.service:
    name: squid
    state: restarted
    enabled: true
  when: "'running' not in ansible_facts.services['squid.service'].state"

- name: Apply xcat proxy patches
  ansible.posix.patch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: present
  with_items: "{{ xcat_proxy_patch_file }}"
  when:
    - proxy_status
    - oim_os in oim_os_redhat or
      oim_os in oim_os_rocky
