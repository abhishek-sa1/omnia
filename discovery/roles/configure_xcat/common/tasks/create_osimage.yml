# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialize variables
  ansible.builtin.set_fact:
    diskful_osimage_status: false

- name: Check diskful osimage is created
  ansible.builtin.shell: >
    set -o pipefail && \
    {{ xcat_path }}/lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}" | grep "{{ provision_os_version }}"
  changed_when: false
  failed_when: false
  register: diskful_osimage_check

- name: Set diskful_osimage_status to true
  ansible.builtin.set_fact:
    diskful_osimage_status: true
  when:
    - provision_os in diskful_osimage_check.stdout
    - provision_os_version in diskful_osimage_check.stdout

- name: Create diskful osimage locally
  ansible.builtin.command: "{{ xcat_sbin_path }}/copycds {{ iso_file_path }}"
  changed_when: true
  when: not nfs_used

- name: Create diskful osimage on NFS
  when: nfs_used
  block:
    - name: Create tmp osimage directory
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: "{{ mode }}"

    - name: Create diskful osimage
      ansible.builtin.command: "{{ xcat_sbin_path }}/copycds -p {{ tmp_dir }} {{ iso_file_path }}"
      changed_when: true

    - name: Get os arch and os version
      ansible.builtin.shell: >
        set -o pipefail && \
        {{ xcat_sbin_path }}/copycds -i {{ iso_file_path }} | grep -E "ARCH|DISTNAME" | cut -d':' -f2
      changed_when: false
      register: osimage_info
      failed_when: osimage_info.stdout_lines | length != 2

    - name: Set os arch and os dist
      ansible.builtin.set_fact:
        os_arch: "{{ osimage_info.stdout_lines[1] }}"
        os_dist: "{{ osimage_info.stdout_lines[0] }}"

    - name: Set install directory
      ansible.builtin.set_fact:
        xcat_install_dir: "{{ xcat_install_dir }}/{{ os_dist }}/{{ os_arch }}"

    - name: Create osimage install directory
      ansible.builtin.file:
        path: "{{ xcat_install_dir }}"
        state: directory
        mode: "{{ mode }}"

    - name: Copy osimages to xCAT install directory
      ansible.builtin.copy:
        src: "{{ tmp_dir }}/"
        dest: "{{ xcat_install_dir }}"
        remote_src: true
        mode: "{{ mode }}"

    - name: Delete tmp osimage directory
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: absent

    - name: Fetch osimage names
      ansible.builtin.include_tasks: fetch_osimage.yml

    - name: Modify comput osimages with xCAT install directory
      ansible.builtin.command: "{{ xcat_path }}/chdef -t osimage {{ provision_os_image }} pkgdir={{ xcat_install_dir }}"
      changed_when: true

    - name: Modify service osimages with xCAT install directory
      ansible.builtin.command: "{{ xcat_path }}/chdef -t osimage {{ service_os_image }} pkgdir={{ xcat_install_dir }}"
      changed_when: true

  rescue:
    - name: Fail if NFS osimage creation/saving failed
      ansible.builtin.fail:
        msg: "{{ nfs_image_failure }}"
