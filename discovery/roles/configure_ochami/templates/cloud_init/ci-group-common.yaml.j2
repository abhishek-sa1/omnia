- name: ssh
  description: "ssh config"
  file:
    encoding: plain
    content: |
      ## template: jinja
      #cloud-config
      merge_how:
        - name: list
          settings: [append]
        - name: dict
          settings: [no_replace, recurse_list]
 
      write_files:
        - path: /usr/local/bin/set-ssh.sh
          permissions: '0755'
          content: |
            #!/bin/bash
            timedatectl set-timezone {{ hostvars['localhost']['timezone'] }}
            localectl set-locale LANG={{ hostvars['localhost']['language'] }}
            sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config.d/50-cloud-init.conf
            systemctl restart sshd
            default_count=$(ip route | grep -c "^default")
            if [ "$default_count" -le 1 ]; then
                echo "Only one or no default route found. No action needed."
            else
                private_nic=$(ip route | grep "^default via 10.11.0.1" | awk '{print $5}')
                # Get all default routes
                ip route | grep '^default' | while read -r line; do
                    nmcli con del "Wired Connection"
                    # Extract NIC name
                    nic=$(echo "$line" | awk '{print $5}')

                    # Add the default route to the connection
                    if [ -n "$nic" ]; then
                        echo "Adding default route via $gateway to connection $nic on device $nic"
                        nmcli con add type ethernet ifname "$nic" con-name "$nic" ipv4.method auto
                        if [ "$nic" = "$private_nic" ]; then
                          nmcli con modify "$nic" ipv4.never-default yes
                          nmcli con delete "cloud-init $nic"
                        fi
                        nmcli con up "$nic"
                    else
                        echo "No connection found for device $nic"
                    fi
                done
            fi
      runcmd:
        - /usr/local/bin/set-ssh.sh

- name: chrony
  description: "chrony config"
  file:
    encoding: plain
    content: |
      ## template: jinja
      #cloud-config
      merge_how:
        - name: list
          settings: [append]
        - name: dict
          settings: [no_replace, recurse_list]
      write_files:
        - path: /etc/chrony.conf
          permissions: '0644'
          content: |
            server {{ cluster_boot_ip }} iburst

            driftfile /var/lib/chrony/drift
            rtcsync
            makestep 1.0 3
            logdir /var/log/chrony
            cmdport 0

      runcmd:
        - "systemctl enable chronyd"
        - "systemctl restart chronyd"
        - "chronyc sources"
        - "chronyc -a makestep"
