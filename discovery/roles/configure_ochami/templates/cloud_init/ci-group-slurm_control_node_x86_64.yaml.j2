- name: {{ functional_group_name }}
  description: "{{ functional_group_name }}"

  file:
    encoding: plain
    content: |
      ## template: jinja
      #cloud-config
      merge_how:
      - name: list
        settings: [append]
      - name: dict
        settings: [no_replace, recurse_list]

      users:
        - name: root
          ssh_authorized_keys: "{{ read_ssh_key.stdout }}"
      disable_root: false

      write_files:
        - path: /usr/local/bin/set-hostname-by-mac.sh
          permissions: '{{ file_mode_755 }}'
          content: |
            #!/bin/bash
            # Autogenerated hostname & IP setter based on NIC MAC
            DOMAIN_NAME={{ hostvars['localhost']['domain_name'] }}
            for IFACE in /sys/class/net/*; do
                MAC=$(cat $IFACE/address | tr '[:upper:]' '[:lower:]')
                case $MAC in
                {% for node in nodes %}
                {{ node.interfaces[0].mac_addr | lower }}) HOST={{ node.name }} IP={{ node.interfaces[0].ip_addrs[0].ip_addr }} ;;
                {% endfor %}
                esac
            done

            if [ -n "$HOST" ]; then
                if ! grep -q "$HOST" /etc/hosts; then
                    echo "$IP $HOST.$DOMAIN_NAME" >> /etc/hosts
                fi
                hostnamectl set-hostname "$HOST.$DOMAIN_NAME"
                sysctl kernel.hostname=$HOST.$DOMAIN_NAME
            fi

            echo 'root:{{ hostvars['localhost']['provision_password'] }}' | chpasswd
            timedatectl set-timezone {{ hostvars['localhost']['timezone'] }}
            sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config.d/50-cloud-init.conf
            systemctl restart sshd

{% if hostvars['localhost']['openldap_support'] %}
        - path: /etc/sssd/sssd.conf
          owner: root:root
          permissions: '0600'
          content: |
            {{ lookup('template', 'templates/openldap/sssd.conf.j2') | indent(6) }}

        - path: /usr/local/bin/update_ldap_conf.sh
          owner: root:root
          permissions: '0755'
          content: |
            {{ lookup('template', 'templates/openldap/update_ldap_conf.sh.j2') | indent(12) }}
{% endif %}

        - path: /etc/hosts
          append: true
          content: |
{% for key in ip_name_map | sort %}
            {{ ip_name_map[key] }} {{ key }}
{% endfor %}

        - path: /root/init_slurm_db.sql
          permissions: '{{ file_mode_600 }}'
          content: |
            SELECT VERSION();
            SHOW DATABASES;

            CREATE DATABASE slurm_acct_db;
            CREATE USER 'slurm'@'%' IDENTIFIED BY '{{ hostvars['localhost']['slurm_db_password'] }}';
            GRANT ALL PRIVILEGES ON slurm_acct_db.* TO 'slurm'@'%';
            FLUSH PRIVILEGES;

      runcmd:
         - /usr/local/bin/set-hostname-by-mac.sh
         - useradd -mG wheel -p '$6$VHdSKZNm$O3iFYmRiaFQCemQJjhfrpqqV7DdHBi5YpY6Aq06JSQpABPw.3d8PQ8bNY9NuZSmDv7IL/TsrhRJ6btkgKaonT.' testuser
         - groupadd -r {{ slurm_group_name }}
         - useradd -r -g {{ slurm_group_name }} -d {{ home_dir }} -s /sbin/nologin {{ user }}

{% if hostvars['localhost']['openldap_support'] %}
         - mkdir /ldapcerts
         - echo "{{ cloud_init_nfs_path_openldap }}/certs                /ldapcerts       nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path_openldap }}/ldapuser             /home            nfs defaults,_netdev 0 0" >> /etc/fstab
{% endif %}

         - mkdir -p /var/log/slurm /var/run/slurm /var/spool /etc/slurm /var/lib/slurm /etc/my.cnf.d /etc/munge /var/lib/mysql /var/log/mariadb
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/etc/slurm      /etc/slurm       nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/etc/my.cnf.d   /etc/my.cnf.d    nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/var/lib/mysql  /var/lib/mysql   nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/var/log/mariadb /var/log/mariadb nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/var/log/slurm  /var/log/slurm   nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/var/spool      /var/spool       nfs defaults,_netdev 0 0" >> /etc/fstab
         - echo "{{ cloud_init_nfs_path }}/$(hostname -s)/etc/munge      /etc/munge       nfs defaults,_netdev 0 0" >> /etc/fstab
         - chmod {{ file_mode }} /etc/fstab
         - mount -a
         - chown -R {{ user }}:{{ slurm_group_name }} /var/log/slurm
         - chown -R {{ user }}:{{ slurm_group_name }} /var/run/slurm
         - chown -R {{ user }}:{{ slurm_group_name }} /etc/slurm
         - chown -R {{ user }}:{{ slurm_group_name }} /var/lib/slurm
         - chown -R {{ user }}:{{ slurm_group_name }} /var/spool
         - chown -R {{ user }}:{{ slurm_group_name }} /etc/my.cnf.d
         - chown -R {{ munge_user }}:{{ munge_group }} /etc/munge/munge.key
         - chown -R {{ mysql_user }}:{{ mysql_group }} /var/lib/mysql
         - chown -R {{ user }}:{{ slurm_group_name }} /var/log/mariadb
         - chmod {{ file_mode_400 }} /etc/munge/munge.key
         - chmod {{ file_mode_755 }} /var/run/slurm
         - chmod {{ file_mode_755 }} /var/log/slurm /etc/slurm /var/spool /var/lib/slurm /etc/my.cnf.d /var/lib/mysql /var/log/mariadb
         - chmod {{ file_mode }} /etc/slurm/slurm.conf
         - chmod {{ file_mode_600 }} /etc/slurm/slurmdbd.conf
         - chown -R {{ user }}:{{ slurm_group_name }} /etc/slurm/slurmdbd.conf

{% if hostvars['localhost']['openldap_support'] %}
         - yes | cp /ldapcerts/* /etc/openldap/certs
         - umount /ldapcerts
{% endif %}

         - chown -R slurm:slurm /var/log/slurm
         - chown -R slurm:slurm /var/run/slurm
         - chown -R slurm:slurm /etc/slurm
         - chown -R slurm:slurm /var/lib/slurm
         - chown -R slurm:slurm /var/spool
         - chown -R slurm:slurm /etc/my.cnf.d
         - chown -R munge:munge /etc/munge/munge.key
         - chown -R mysql:mysql /var/lib/mysql
         - chown -R slurm:slurm /var/log/mariadb
         - chmod 400 /etc/munge/munge.key
         - chmod 755 /var/run/slurm
         - chmod 755 /var/log/slurm /etc/slurm /var/spool /var/lib/slurm /etc/my.cnf.d /var/lib/mysql /var/log/mariadb
         - chmod 644 /etc/slurm/slurm.conf
         - chmod 600 /etc/slurm/slurmdbd.conf
         - chown -R slurm:slurm /etc/slurm/slurmdbd.conf
         - sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config.d/50-cloud-init.conf

         - mkdir -p /var/spool/slurmctld /var/spool/state
         - chmod {{ file_mode_755 }} /var/spool/state
         - chown -R {{ user }}:{{ slurm_group_name }} /var/spool/state

         - setenforce 0
         - systemctl enable firewalld
         - systemctl start firewalld
         - firewall-cmd --permanent --add-port={{ slurm_conf_dict.SlurmctldPort }}/tcp
         - firewall-cmd --permanent --add-port={{ slurm_conf_dict.SlurmctldPort }}/udp

         - firewall-cmd --permanent --add-port={{ slurm_dbd_port }}/tcp
         - firewall-cmd --permanent --add-port={{ slurm_dbd_port }}/udp

         - firewall-cmd --permanent --add-port={{ slurm_db_port_default }}/tcp
         - firewall-cmd --permanent --add-service=ssh
         - firewall-cmd --permanent --add-port={{ slurm_conf_dict.SrunPortRange }}/tcp
         - firewall-cmd --permanent --add-port={{ slurm_conf_dict.SrunPortRange }}/udp
         - firewall-cmd --reload
         - systemctl enable munge
         - systemctl start munge
         - systemctl enable slurmctld
         - systemctl start slurmctld
         - systemctl enable slurmdbd
         - systemctl start slurmdbd
         - systemctl enable --now mariadb
         - mysql -u root < /root/init_slurm_db.sql

         - systemctl enable sshd
         - systemctl start sshd
         - systemctl restart slurmctld
         - systemctl restart slurmdbd
         - systemctl restart mariadb

{% if hostvars['localhost']['openldap_support'] %}
         - /usr/local/bin/update_ldap_conf.sh
         - authselect select sssd with-mkhomedir --force
         - sudo systemctl enable --now oddjobd.service
         - sudo systemctl enable --now sssd
         - sudo systemctl enable --now sssd
         - setsebool -P authlogin_nsswitch_use_ldap on
         - setsebool -P authlogin_yubikey on
         - sudo systemctl stop firewalld
         - sudo systemctl disable firewalld
         - sudo systemctl restart sssd
         - systemctl restart sshd
{% endif %}




