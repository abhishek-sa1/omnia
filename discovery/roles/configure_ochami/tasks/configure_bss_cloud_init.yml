# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Include openchami vars
  ansible.builtin.include_vars: "{{ openchami_config_vars_path }}"

- name: Include nodes vars
  ansible.builtin.slurp:
    src: "{{ openchami_nodes_vars_path }}"
  register: nodes_vars

- name: Decode and parse nodes_vars YAML
  ansible.builtin.set_fact:
    node_parsed_yaml: "{{ nodes_vars.content | b64decode | from_yaml }}"

- name: Set nodes
  ansible.builtin.set_fact:
    nodes: "{{ node_parsed_yaml.nodes }}"

- name: Create boot and cloud-init directory
  ansible.builtin.file:
    path: "{{ bss_dir }}"
    state: directory
    mode: "{{ hostvars['localhost']['dir_permissions_755'] }}"

- name: Delete ochami bss boot params
  ansible.builtin.command: /usr/bin/ochami bss boot params delete --no-confirm -d '{"macs":["{{ item }}"]}'
  changed_when: false
  failed_when: false
  with_items: "{{ nodes | map(attribute='interfaces.0.mac_addr') | list }}"

- name: Include configure bss
  ansible.builtin.include_tasks: configure_bss_group.yml
  with_items: "{{ hostvars['localhost']['functional_groups'] | map(attribute='name') | list }}"

- name: Verify boot params set
  ansible.builtin.command: ochami bss boot params get -F yaml
  changed_when: false
  register: boot_params_output

- name: Verify boot params output
  ansible.builtin.debug:
    msg: "{{ boot_params_output.stdout_lines }}"

- name: Create cloud-init directory
  ansible.builtin.file:
    path: "{{ cloud_init_dir }}"
    state: directory
    mode: "{{ hostvars['localhost']['dir_permissions_755'] }}"

- name: Read the ssh key
  ansible.builtin.command: cat {{ ssh_key_path }}
  changed_when: false
  register: read_ssh_key
  no_log: true

- name: Load ci defaults template
  ansible.builtin.template:
    src: "{{ ci_defaults_template }}"
    dest: "{{ ci_defaults_dest }}"
    mode: "{{ hostvars['localhost']['file_permissions_644'] }}"

- name: Set ci defaults configuration
  ansible.builtin.command: /usr/bin/ochami cloud-init defaults set -f yaml -d @{{ ci_defaults_dest }}
  changed_when: true

- name: Verify ci defaults configuration
  ansible.builtin.command: /usr/bin/ochami cloud-init defaults get -F json-pretty
  changed_when: false
  register: ci_defaults_output

- name: Verify ci defaults output
  ansible.builtin.debug:
    msg: "{{ ci_defaults_output.stdout_lines }}"
    verbosity: 2

- name: Configure cloud-init group
  ansible.builtin.include_tasks: configure_cloud_init_common.yml

- name: Include configure cloud init
  ansible.builtin.include_tasks: configure_cloud_init_group.yml
  with_items: "{{ hostvars['localhost']['functional_groups'] | map(attribute='name') | list }}"
