# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Configure the ochami
  environment: "{{ ochami_env }}"
  block:
    - name: Create cloud-init directory
      ansible.builtin.file:
        path: '{{ openchami_work_dir }}/cloud-init'
        state: directory
        mode: "{{ hostvars['localhost']['dir_permissions_755'] }}"

    - name: Read the ssh key
      ansible.builtin.command: cat {{ ssh_key_path }}
      register: read_ssh_key
      no_log: true

    - name: Load ci defaults template
      ansible.builtin.template:
        src: "{{ ci_defaults_template }}"
        dest: "{{ ci_defaults_dest }}"
        mode: "{{ hostvars['localhost']['file_permissions_644']} }}"

    - name: Set ci defaults configuration
      ansible.builtin.command: ochami cloud-init defaults set -f yaml -d @{{ ci_defaults_dest }}
      changed_when: true

    - name: Verify ci defaults configuration
      ansible.builtin.command: ochami cloud-init defaults get -F json-pretty
      changed_when: false
      register: ci_defaults_output

    - name: Verify ci defaults output
      ansible.builtin.debug:
        msg: "{{ ci_defaults_output.stdout_lines }}"

    - name: Load ci group {{ group_name }} template
      ansible.builtin.template:
        src: "{{ ci_group_compute_template }}"
        dest: "{{ ci_group_compute_dest }}"
        mode: "{{ hostvars['localhost']['file_permissions_644']} }}"

    - name: Set ci group {{ group_name }} configuration
      ansible.builtin.command: ochami cloud-init group set -f yaml -d @{{ ci_group_compute_dest }}
      changed_when: true

    - name: Verify ci group compute configuration
      ansible.builtin.command: ochami cloud-init group get config {{ group_name }}
      changed_when: false
      register: ci_group_compute_output

    - name: Verify ci group {{ group_name }} output
      ansible.builtin.debug:
        msg: "{{ ci_group_compute_output.stdout_lines }}"
