# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check entitlement certs
  ansible.builtin.find:
    paths: "{{ entitlement_path }}"
    patterns: "*.pem"
    file_type: file
  register: entitlement_certs
  failed_when: false

- name: Extract repo baseurls if redhat.repo exists
  ansible.builtin.shell: |
    set -o pipefail
    awk -F= '/^baseurl/ {print $2}' /etc/yum.repos.d/redhat.repo | grep -E 'codeready-builder|baseos|appstream' || true
  args:
    warn: false
  register: repo_urls
  changed_when: false
  failed_when: false

- name: Determine subscription status
  ansible.builtin.set_fact:
    subscription_status: >-
      {{
        (entitlement_certs.matched | default(0) | int > 0)
        or ((repo_urls.stdout_lines | default([])) | length > 0)
      }}

- name: Debug subscription status
  ansible.builtin.debug:
    msg: "Subscription enabled? {{ subscription_status }}"

- name: Extract subscription urls
  when: subscription_status | bool
  block:
    - name: Ensure shared path exists
      ansible.builtin.file:
        path: "{{ rhel_repo_cert_dir }}"
        state: directory
        mode: {{ hostvars['localhost']['dir_permissions_755'] }}

    - name: Find entitlement certs on oim
      ansible.builtin.find:
        paths: "{{ entitlement_path }}"
        patterns: "*.pem"
        file_type: file
      register: entitlement_certs
      when: subscription_status | bool

    - name: Copy entitlement certs to shared path
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: "{{ rhel_repo_cert_dir }}"
        mode: {{ hostvars['localhost']['file_permissions_644'] }}
        remote_src: true
      loop: "{{ entitlement_certs.files | default([]) }}"
      when: subscription_status | bool

    - name: Copy Red Hat UEP cert
      ansible.builtin.copy:
        src: "{{ redhat_uep_cert }}"
        dest: "{{ rhel_repo_cert_dir }}/redhat-uep.pem"
        mode: {{ hostvars['localhost']['file_permissions_644'] }}
        remote_src: true

    - name: Extract only RHEL baseurls (appstream, baseos, codeready-builder)
      ansible.builtin.shell: |
        set -o pipefail
        awk -v ver="{{ rhel_version }}" '
          /^\[/ {section=$0}
          /^baseurl/ && section ~ /(rhel-{{ rhel_version }}-for-x86_64-(appstream|baseos)-rpms|codeready-builder-for-rhel-{{ rhel_version }}-x86_64-rpms)/ {
            gsub(/\$releasever/, ver, $3)
            print $3
          }
        ' {{ redhat_repo_file }}
      register: repo_baseurls
      changed_when: false


    - name: Set fact repo baseurls with trailing slash
      ansible.builtin.set_fact:
        repo_baseurls: "{{ repo_baseurls.stdout_lines
                          | map('regex_replace', '([^/])$', '\\1/')
                          | list }}"

    - name: Show extracted baseurls
      ansible.builtin.debug:
        msg: "{{ repo_baseurls }}"
