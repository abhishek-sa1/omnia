# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Include variable file local_repo_config.yml
  block:
    - name: Include variable file local_repo_config.yml
      ansible.builtin.include_vars: "{{ local_repo_config_file }}"
      register: include_local_repo_config
      no_log: true
  rescue:
    - name: Failed to include local_repo_config.yml
      ansible.builtin.fail:
        msg: "{{ local_repo_config_syntax_fail_msg }} Possible Syntax Error Hints: {{ include_local_repo_config.message }}"

- name: Check if rhel_os_url is provided incase of cluster_os_type rhel
  ansible.builtin.fail:
    msg: "{{ rhel_os_url_fail_msg_crb }}"
  when: cluster_os_type == "rhel" and rhel_os_url is none

- name: Validate rhel_os_url
  ansible.builtin.include_tasks: validate_rhel_os_url.yml
  when: rhel_os_url is not none

- name: Validate omnia_repo_url_rhel
  ansible.builtin.assert:
    that:
      - "omnia_repo_url_rhel is defined"
      - "omnia_repo_url_rhel | type_debug == 'list'"
      - "omnia_repo_url_rhel | length > 0"
    fail_msg: "{{ omnia_repo_url_rhel_fail_msg }}"
  when: cluster_os_type == 'rhel'

- name: Validate url and gpgkey presence in omnia_repo_url_rhel
  ansible.builtin.assert:
    that:
      - "item.url is defined"
      - "item.gpgkey is defined"
      - "item.name is defined and item.name !='' and item.name is not none"
    fail_msg: "{{ omnia_repo_url_rhel_url_gpg_key_fail_msg }}"
  loop: "{{ omnia_repo_url_rhel }}"
  loop_control:
    loop_var: item
  when: cluster_os_type == 'rhel'

- name: Validate omnia_repo_url_rocky
  ansible.builtin.assert:
    that:
      - "omnia_repo_url_rocky is defined"
      - "omnia_repo_url_rocky | type_debug == 'list'"
      - "omnia_repo_url_rocky | length > 0"
    fail_msg: "{{ omnia_repo_url_rocky_fail_msg }}"
  when: cluster_os_type == 'rocky'

- name: Validate url and gpgkey presence in omnia_repo_url_rocky
  ansible.builtin.assert:
    that:
      - "item.url is defined"
      - "item.gpgkey is defined"
    fail_msg: "{{ omnia_repo_url_rocky_url_gpg_key_fail_msg }}"
  loop: "{{ omnia_repo_url_rocky }}"
  loop_control:
    loop_var: item
  when: cluster_os_type == 'rocky'
