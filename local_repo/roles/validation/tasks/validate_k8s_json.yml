# Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Validate compute k8s json
  when: compute_k8s_support is true
  block:
    - name: Load compute_k8s.json
      ansible.builtin.set_fact:
        compute_k8s_packages_json: "{{ lookup('file', base_compute_k8s_json_file) | from_json }}"

    - name: Extract and set facts for tarball URLs
      ansible.builtin.set_fact:
        kubeadm_package: "{{ compute_k8s_packages_json['compute_k8s']['cluster'] | selectattr('type', 'equalto', 'tarball') | selectattr('package', 'search', 'kubeadm') | map(attribute='package') | join }}" # noqa: yaml[line-length]

    - name: Set default fact for dynamic compute k8s generation
      ansible.builtin.set_fact:
        dynamic_compute_k8s_generation: false

    - name: Set fact for compute k8s dynamic genaration when kubeadm package is not kubeadm-1.31.4
      ansible.builtin.set_fact:
        dynamic_compute_k8s_generation: true
      when: kubeadm_package != kubeadm_package_name

    - name: Set fact for dynamic genaration when compute k8s version is not equal to 1.31.4
      ansible.builtin.set_fact:
        dynamic_compute_k8s_generation: true
      when: compute_k8s_version != "1.31.4"

- name: Validate service k8s json
  when: service_k8s_support is true
  block:
    - name: Load service_k8s.json
      ansible.builtin.set_fact:
        service_k8s_packages_json: "{{ lookup('file', base_service_k8s_json_file) | from_json }}"

    - name: Extract and set facts for tarball URLs
      ansible.builtin.set_fact:
        service_k8s_kubeadm_package: "{{ service_k8s_packages_json['service_k8s']['cluster'] | selectattr('type', 'equalto', 'tarball') | selectattr('package', 'search', 'kubeadm') | map(attribute='package') | join }}" # noqa: yaml[line-length]

    - name: Set default fact for serivce k8s dynamic k8s generation
      ansible.builtin.set_fact:
        service_k8s_dynamic_k8s_generation: false

    - name: Set fact for service k8s dynamic genaration when kubeadm package is not kubeadm-1.31.4
      ansible.builtin.set_fact:
        service_k8s_dynamic_k8s_generation: true
      when: service_k8s_kubeadm_package != kubeadm_package_name

    - name: Set fact for service k8s dynamic genaration when service k8s version is not equal to 1.31.4
      ansible.builtin.set_fact:
        service_k8s_dynamic_k8s_generation: true
      when: service_k8s_version != "1.31.4"

- name: Initialize cluster_configs as empty list
  ansible.builtin.set_fact:
    cluster_configs: []

# Append compute_k8s cluster config if compute_k8s_support is true
- name: Add compute k8s cluster config to cluster_configs
  ansible.builtin.set_fact:
    cluster_configs: "{{ cluster_configs + [compute_k8s_config] }}"
  vars:
    compute_k8s_config:
      name: "compute_k8s"
      version: "{{ compute_k8s_version }}"
      json_file: "{{ dynamic_k8s_json_folder }}/v{{ compute_k8s_version }}/compute_k8s_v{{ compute_k8s_version }}.json"
      base_json_file: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/compute_k8s.json"
      backup_json_file: "{{ dynamic_k8s_json_folder }}/compute_k8s_bkp.json"
      run_condition: "{{ compute_k8s_support and dynamic_compute_k8s_generation }}"
  when: compute_k8s_support | bool

# Append service_k8s cluster config if service_k8s_support is true
- name: Add service_k8s cluster config to cluster_configs
  ansible.builtin.set_fact:
    cluster_configs: "{{ cluster_configs + [service_k8s_config] }}"
  vars:
    service_k8s_config:
      name: "service_k8s"
      version: "{{ service_k8s_version }}"
      json_file: "{{ dynamic_k8s_json_folder }}/v{{ service_k8s_version }}/service_k8s_v{{ service_k8s_version }}.json"
      base_json_file: "{{ project_input_path }}/config/{{ cluster_os_type }}/{{ cluster_os_version }}/service_k8s.json"
      backup_json_file: "{{ dynamic_k8s_json_folder }}/service_k8s_bkp.json"
      run_condition: "{{ service_k8s_support and service_k8s_dynamic_k8s_generation }}"
  when: service_k8s_support | bool

- name: Set software_cleanup_list based on supported components
  ansible.builtin.set_fact:
    software_cleanup_list: >
      {{
        [
          {
            'name': 'compute_k8s',
            'version': compute_k8s_version | default(''),
            'enabled': compute_k8s_support | default(false)
          },
          {
            'name': 'service_k8s',
            'version': service_k8s_version | default(''),
            'enabled': service_k8s_support | default(false)
          }
        ]
      }}
